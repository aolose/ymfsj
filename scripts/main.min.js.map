{"version":3,"sources":["main.js"],"names":["root","factory","define","amd","exports","module","PhotoSwipe","this","template","UiClass","items","options","framework","features","bind","target","type","listener","unbind","methodName","split","i","length","isArray","obj","Array","createEl","classes","tag","el","document","createElement","className","getScrollY","yOffset","window","pageYOffset","undefined","documentElement","scrollTop","removeClass","reg","RegExp","replace","addClass","hasClass","test","getChildByClass","parentEl","childClassName","node","firstChild","nextSibling","arraySearch","array","value","key","extend","o1","o2","preventOverwrite","prop","hasOwnProperty","easing","sine","out","k","Math","sin","PI","inOut","cos","cubic","detectFeatures","helperEl","helperStyle","style","vendor","oldIE","all","addEventListener","touch","requestAnimationFrame","raf","caf","cancelAnimationFrame","pointerEvent","navigator","pointerEnabled","msPointerEnabled","ua","userAgent","platform","v","match","parseInt","isOldIOSPhone","androidversion","parseFloat","isOldAndroid","androidVersion","isMobileOpera","styleCheckItem","styleName","styleChecks","vendors","a","charAt","toUpperCase","slice","toLowerCase","lastTime","fn","currTime","Date","getTime","timeToCall","max","id","setTimeout","clearTimeout","svg","createElementNS","createSVGRect","evName","_handleEv","handleEvent","call","self","DOUBLE_TAP_RADIUS","NUM_HOLDERS","_options","allowPanToNext","spacing","bgOpacity","mouseUsed","loop","pinchToClose","closeOnScroll","closeOnVerticalDrag","verticalDragRange","hideAnimationDuration","showAnimationDuration","showHideOpacity","focus","escKey","arrowKeys","mainScrollEndFriction","panEndFriction","isClickableElement","tagName","getDoubleTapZoom","isMouseClick","item","initialZoomLevel","maxSpreadZoom","modal","scaleMode","_isOpen","_isDestroying","_closedByScroll","_currentItemIndex","_containerStyle","_containerShiftIndex","_upMoveEvents","_downEvents","_globalEventHandlers","_currZoomLevel","_startZoomLevel","_translatePrefix","_translateSufix","_updateSizeInterval","_itemsNeedUpdate","_itemHolders","_prevItemIndex","_dragStartEvent","_dragMoveEvent","_dragEndEvent","_dragCancelEvent","_transformKey","_pointerEventEnabled","_likelyTouchDevice","_requestAF","_cancelAF","_initalClassName","_initalWindowScrollY","_oldIE","_currentWindowScrollY","_features","_gestureStartTime","_gestureCheckSpeedTime","_releaseAnimData","_isZoomingIn","_verticalDragInitiated","_oldAndroidTouchEndTimeout","_isDragging","_isMultitouch","_zoomStarted","_moved","_dragAnimFrame","_mainScrollShifted","_currentPoints","_isZooming","_currPointsDistance","_startPointsDistance","_currPanBounds","_currZoomElementStyle","_mainScrollAnimating","_direction","_isFirstMove","_opacityChanged","_bgOpacity","_wasOverInitialZoom","_tempCounter","_getEmptyPoint","x","y","_currPanDist","_startPanOffset","_panOffset","_viewportSize","_currPositionIndex","_offset","_slideSize","_indexDiff","_isFixedPosition","_modules","_windowVisibleSize","_renderMaxResolution","_registerModule","name","publicMethods","push","_getLoopedId","index","numSlides","_getNumItems","_listeners","_listen","_shout","listeners","args","prototype","arguments","shift","apply","_getCurrentTime","_applyBgOpacity","opacity","bg","_applyZoomTransform","styleObj","zoom","currItem","fitRatio","_applyCurrentZoomPan","allowRenderResolution","_setImageSize","_applyZoomPanToItem","container","initialPosition","_setTranslateX","elStyle","_moveMainScroll","dragging","newSlideIndexOffset","delta","round","_mainScrollPos","_calculatePanOffset","axis","zoomLevel","m","_midZoomPoint","_equalizePoints","p1","p2","_roundPoint","p","_mouseMoveTimeout","_onFirstMouseMove","_bindEvents","transform","scrollWrap","_unbindEvents","scroll","_calculatePanBounds","update","bounds","_calculateItemSize","_getMinZoomLevel","_getMaxZoomLevel","w","_modifyDestPanOffset","destPanBounds","destPanOffset","destZoomLevel","min","_setupTransforms","allow3dTransform","perspective","left","zoomRatio","s","h","width","height","top","_onKeyDown","e","keydownAction","keyCode","ctrlKey","altKey","shiftKey","metaKey","preventDefault","returnValue","_onGlobalClick","stopPropagation","_updatePageScrollOffset","setScrollOffset","_animations","_numAnimations","_stopAnimation","_registerStartAnimation","_stopAllAnimations","_animateProp","b","endProp","d","easingFn","onUpdate","onComplete","t","startAnimTime","animloop","shout","listen","viewportSize","isMainScrollAnimating","getZoomLevel","getCurrentIndex","isDragging","isZooming","applyZoomPan","panX","panY","init","itemHolders","children","wrap","display","resize","updateSize","keydown","click","oldPhone","animationName","ui","isNaN","_getItemAt","setAttribute","position","rootClasses","mainClass","setContent","updateCurrItem","setInterval","close","_showOrHide","destroy","_showOrHideTimeout","clearInterval","_stopDragUpdateLoop","panTo","force","event","goTo","diff","next","prev","updateCurrZoomItem","emulateSetContent","zoomElement","center","invalidateCurrItems","needsUpdate","beforeAnimation","tempHolder","diffAbs","abs","pop","unshift","prevItem","windowScrollY","innerWidth","innerHeight","clientWidth","clientHeight","holder","hIndex","cleanSlide","zoomTo","centerPoint","speed","updateFn","initialPanOffset","now","MIN_SWIPE_DISTANCE","DIRECTION_CHECK_OFFSET","_currPoint","_startPoint","_currPointers","_startMainScrollPos","_posPoints","_tempPoint","_currZoomedItemIndex","_centerPoint","_lastReleaseTime","_currCenterPoint","_isEqualPoints","_isNearbyPoints","touch0","touch1","_calculatePointsDistance","sqrt","_dragUpdateLoop","_renderMovement","_canPan","_closestElement","getAttribute","indexOf","parentNode","_preventObj","_preventDefaultEventBehaviour","isDown","prevent","_convertTouchToPoint","pageX","pageY","identifier","_findCenterOfPoints","pCenter","_pushPosPoint","time","o","_calculateVerticalDragOpacityRatio","_ePoint1","_ePoint2","_tempPointsArr","_getTouchPoints","forEach","touches","_panOrMoveMainScroll","panFriction","startOverDiff","newPanPos","newMainScrollPos","overDiff","newOffset","dir","newMainScrollPosition","mainScrollDiff","_onDragStart","button","_initialZoomRunning","pointerIndex","pointerId","startPointsList","numPoints","_onDragMove","touchesList","pointsDistance","_calculateZoomLevel","zoomFriction","minZoomLevel","maxZoomLevel","minusDiff","percent","opacityRatio","mainScrollChanged","_onDragRelease","releasePoint","splice","pointerType","MSPOINTER_TYPES","4","2","3","gestureType","touchList","changedTouches","releaseTimeDiff","_initDragReleaseAnimationData","calculateSwipeSpeed","initalPanY","initialBgOpacity","itemChanged","_finishSwipeMainScrollGesture","_completeZoomGesture","_completePanGesture","lastFlickDuration","tempReleasePos","lastFlickOffset","lastFlickDist","lastFlickSpeed","slowDownRatio","slowDownRatioReverse","speedDecelerationRatio","speedDecelerationRatioAbs","distanceOffset","backAnimDestination","backAnimStarted","calculateOverBoundsAnimOffset","pos","calculateAnimOffset","timeDiff","panAnimLoop","zoomPan","lastNow","animData","itemsDiff","totalShiftDist","isFastLastFlick","nextCircle","finishAnimDuration","animateToX","animateToDist","touchesDistance","destOpacity","initialOpacity","initGestures","addEventNames","pref","down","move","up","cancel","maxTouchPoints","msMaxTouchPoints","likelyTouchDevice","mousedown","mousemove","mouseup","_items","_initialContentSet","_initialIsLoop","img","completeFn","thumbBounds","initialLayout","getThumbBoundsFn","duration","removeAttribute","startAnimation","closeWithRaf","fadeEverything","src","loadError","miniImg","webkitBackfaceVisibility","initalBgOpacity","_tempPanAreaSize","_imagesToAppendPool","_controllerDefaultOptions","errorMsg","forceProgressiveLoading","preload","getNumItemsFn","_getZeroBounds","_calculateSingleItemPanBounds","realPanElementW","realPanElementH","vGap","isInitial","bottom","hRatio","vRatio","_appendImage","baseDiv","preventAnimation","keepPlaceholder","imageAppended","appendChild","loaded","placeholder","_preloadImage","loading","loadComplete","onload","onerror","_checkForError","cleanUp","innerHTML","maxRes","lastChild","_appendImagesPool","poolItem","clearPlaceholder","lazyLoadItem","initController","getItemAt","isNext","preloadBefore","preloadAfter","preloader","allowProgressiveImg","screen","html","placeholderClassName","msrc","tapTimer","tapReleasePoint","_dispatchTapEvent","origEvent","createEvent","eDetail","initCustomEvent","dispatchEvent","initTap","onTapStart","onTapRelease","p0","clickedTagName","_wheelDelta","initDesktopZoom","setupDesktopZoom","onInit","events","handleMouseWheel","mouseZoomedIn","hasDraggingClass","updateZoomable","removeDraggingClass","deltaY","deltaMode","deltaX","wheelDeltaX","wheelDeltaY","wheelDelta","detail","newPanX","newPanY","toggleDesktopZoom","doubleTapZoomLevel","zoomOut","_historyUpdateTimeout","_hashChangeTimeout","_hashAnimCheckTimeout","_hashChangedByScript","_hashChangedByHistory","_hashReseted","_initialHash","_historyChanged","_closedFromURL","_urlChangedOnce","_windowLoc","_supportsPushState","_historyDefaultOptions","history","galleryUID","_getHash","hash","substring","_cleanHistoryTimeouts","_parseItemIndexFromURL","params","vars","pair","galleryPIDs","searchfor","pid","_updateHash","newHash","newURL","href","location","title","initHistory","updateURL","onHashChange","returnToOriginal","back","pushState","pathname","search","PhotoSwipeUI_Default","pswp","_fullscrenAPI","_controls","_captionContainer","_fakeCaptionContainer","_indexIndicator","_shareButton","_shareModal","_initalCloseOnScrollValue","_isIdle","_loadingIndicator","_loadingIndicatorHidden","_loadingIndicatorTimeout","_galleryHasOneSlide","_blockControlsTap","_blockControlsTapTimeout","_idleInterval","_idleTimer","_overlayUIUpdated","_controlsVisible","_shareModalHidden","_defaultUIOptions","barsSize","closeElClasses","timeToIdle","timeToIdleOutside","loadingIndicatorDelay","addCaptionHTMLFn","captionEl","closeEl","fullscreenEl","zoomEl","shareEl","counterEl","arrowEl","preloaderEl","tapToClose","tapToToggleControls","clickToCloseNonZoomable","shareButtons","label","url","download","getImageURLForShare","getPageURLForShare","getTextForShare","indexIndicatorSep","fitControlsWidth","_onControlsTap","_onIdleMouseMove","uiElement","found","srcElement","clickedClass","_uiElements","onTap","tapDelay","_fitControlsInViewport","_togglePswpClass","cName","add","_countNumItems","hasOneSlide","_toggleShareModalClass","_toggleShareModal","_updateShareURLs","_openWindowPopup","hasAttribute","open","shareButtonData","shareURL","image_url","page_url","share_text","shareButtonOut","encodeURIComponent","parseShareButtonOut","onclick","_hasCloseClass","_idleIncrement","setIdle","_onMouseLeaveWindow","from","relatedTarget","toElement","nodeName","_setupFullscreenAPI","getFullscreenAPI","eventK","updateFullscreen","_setupLoadingIndicator","_toggleLoadingIndicator","naturalWidth","hide","_applyNavBarGaps","gap","bars","insertBefore","captionSize","_setupIdle","_setupHidingControlsDuringGestures","hideControls","showControls","pinchControlsHidden","option","isFullscreen","exit","enter","_setupUIElements","classAttr","loopThroughChildElements","sChildren","l","topBar","point","preventObj","onGlobalTap","onMouseOver","removeChild","isIdle","updateIndexIndicator","supportsFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","api","dE","tF","requestFullscreen","enterK","exitK","elementK","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","initPhotoSwipeFromDOM","gallerySelector","parseThumbnailElements","figureEl","linkEl","size","thumbElements","childNodes","numNodes","closest","onThumbnailsClick","eTarget","clickedListItem","clickedGallery","numChildNodes","nodeIndex","openPhotoSwipe","photoswipeParseHash","gid","galleryElement","disableAnimation","fromURL","gallery","pswpElement","querySelectorAll","thumbnail","getElementsByTagName","pageYScroll","rect","getBoundingClientRect","j","galleryElements","hashData","carousel","lootTime","loopTimer","c","querySelector","active","ia","ixs","offsetLeft","idx","ix"],"mappings":"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","file":"main.min.js","sourcesContent":["/*! PhotoSwipe - v4.1.1 - 2015-12-24\n * http://photoswipe.com\n * Copyright (c) 2015 Dmitry Semenov; */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.PhotoSwipe = factory();\n  }\n})(this, function () {\n\n  'use strict';\n  var PhotoSwipe = function(template, UiClass, items, options){\n\n    /*>>framework-bridge*/\n    /**\n     *\n     * Set of generic functions used by gallery.\n     *\n     * You're free to modify anything here as long as functionality is kept.\n     *\n     */\n    var framework = {\n      features: null,\n      bind: function(target, type, listener, unbind) {\n        var methodName = (unbind ? 'remove' : 'add') + 'EventListener';\n        type = type.split(' ');\n        for(var i = 0; i < type.length; i++) {\n          if(type[i]) {\n            target[methodName]( type[i], listener, false);\n          }\n        }\n      },\n      isArray: function(obj) {\n        return (obj instanceof Array);\n      },\n      createEl: function(classes, tag) {\n        var el = document.createElement(tag || 'div');\n        if(classes) {\n          el.className = classes;\n        }\n        return el;\n      },\n      getScrollY: function() {\n        var yOffset = window.pageYOffset;\n        return yOffset !== undefined ? yOffset : document.documentElement.scrollTop;\n      },\n      unbind: function(target, type, listener) {\n        framework.bind(target,type,listener,true);\n      },\n      removeClass: function(el, className) {\n        var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n        el.className = el.className.replace(reg, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n      },\n      addClass: function(el, className) {\n        if( !framework.hasClass(el,className) ) {\n          el.className += (el.className ? ' ' : '') + className;\n        }\n      },\n      hasClass: function(el, className) {\n        return el.className && new RegExp('(^|\\\\s)' + className + '(\\\\s|$)').test(el.className);\n      },\n      getChildByClass: function(parentEl, childClassName) {\n        var node = parentEl.firstChild;\n        while(node) {\n          if( framework.hasClass(node, childClassName) ) {\n            return node;\n          }\n          node = node.nextSibling;\n        }\n      },\n      arraySearch: function(array, value, key) {\n        var i = array.length;\n        while(i--) {\n          if(array[i][key] === value) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      extend: function(o1, o2, preventOverwrite) {\n        for (var prop in o2) {\n          if (o2.hasOwnProperty(prop)) {\n            if(preventOverwrite && o1.hasOwnProperty(prop)) {\n              continue;\n            }\n            o1[prop] = o2[prop];\n          }\n        }\n      },\n      easing: {\n        sine: {\n          out: function(k) {\n            return Math.sin(k * (Math.PI / 2));\n          },\n          inOut: function(k) {\n            return - (Math.cos(Math.PI * k) - 1) / 2;\n          }\n        },\n        cubic: {\n          out: function(k) {\n            return --k * k * k + 1;\n          }\n        }\n        /*\n         elastic: {\n         out: function ( k ) {\n\n         var s, a = 0.1, p = 0.4;\n         if ( k === 0 ) return 0;\n         if ( k === 1 ) return 1;\n         if ( !a || a < 1 ) { a = 1; s = p / 4; }\n         else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n         return ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n         },\n         },\n         back: {\n         out: function ( k ) {\n         var s = 1.70158;\n         return --k * k * ( ( s + 1 ) * k + s ) + 1;\n         }\n         }\n         */\n      },\n\n      /**\n       *\n       * @return {object}\n       *\n       * {\n\t *  raf : request animation frame function\n\t *  caf : cancel animation frame function\n\t *  transfrom : transform property key (with vendor), or null if not supported\n\t *  oldIE : IE8 or below\n\t * }\n       *\n       */\n      detectFeatures: function() {\n        if(framework.features) {\n          return framework.features;\n        }\n        var helperEl = framework.createEl(),\n          helperStyle = helperEl.style,\n          vendor = '',\n          features = {};\n\n        // IE8 and below\n        features.oldIE = document.all && !document.addEventListener;\n\n        features.touch = 'ontouchstart' in window;\n\n        if(window.requestAnimationFrame) {\n          features.raf = window.requestAnimationFrame;\n          features.caf = window.cancelAnimationFrame;\n        }\n\n        features.pointerEvent = navigator.pointerEnabled || navigator.msPointerEnabled;\n\n        // fix false-positive detection of old Android in new IE\n        // (IE11 ua string contains \"Android 4.0\")\n\n        if(!features.pointerEvent) {\n\n          var ua = navigator.userAgent;\n\n          // Detect if device is iPhone or iPod and if it's older than iOS 8\n          // http://stackoverflow.com/a/14223920\n          //\n          // This detection is made because of buggy top/bottom toolbars\n          // that don't trigger window.resize event.\n          // For more info refer to _isFixedPosition variable in core.js\n\n          if (/iP(hone|od)/.test(navigator.platform)) {\n            var v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n            if(v && v.length > 0) {\n              v = parseInt(v[1], 10);\n              if(v >= 1 && v < 8 ) {\n                features.isOldIOSPhone = true;\n              }\n            }\n          }\n\n          // Detect old Android (before KitKat)\n          // due to bugs related to position:fixed\n          // http://stackoverflow.com/questions/7184573/pick-up-the-android-version-in-the-browser-by-javascript\n\n          var match = ua.match(/Android\\s([0-9\\.]*)/);\n          var androidversion =  match ? match[1] : 0;\n          androidversion = parseFloat(androidversion);\n          if(androidversion >= 1 ) {\n            if(androidversion < 4.4) {\n              features.isOldAndroid = true; // for fixed position bug & performance\n            }\n            features.androidVersion = androidversion; // for touchend bug\n          }\n          features.isMobileOpera = /opera mini|opera mobi/i.test(ua);\n\n          // p.s. yes, yes, UA sniffing is bad, propose your solution for above bugs.\n        }\n\n        var styleChecks = ['transform', 'perspective', 'animationName'],\n          vendors = ['', 'webkit','Moz','ms','O'],\n          styleCheckItem,\n          styleName;\n\n        for(var i = 0; i < 4; i++) {\n          vendor = vendors[i];\n\n          for(var a = 0; a < 3; a++) {\n            styleCheckItem = styleChecks[a];\n\n            // uppercase first letter of property name, if vendor is present\n            styleName = vendor + (vendor ?\n                styleCheckItem.charAt(0).toUpperCase() + styleCheckItem.slice(1) :\n                styleCheckItem);\n\n            if(!features[styleCheckItem] && styleName in helperStyle ) {\n              features[styleCheckItem] = styleName;\n            }\n          }\n\n          if(vendor && !features.raf) {\n            vendor = vendor.toLowerCase();\n            features.raf = window[vendor+'RequestAnimationFrame'];\n            if(features.raf) {\n              features.caf = window[vendor+'CancelAnimationFrame'] ||\n                window[vendor+'CancelRequestAnimationFrame'];\n            }\n          }\n        }\n\n        if(!features.raf) {\n          var lastTime = 0;\n          features.raf = function(fn) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { fn(currTime + timeToCall); }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n          };\n          features.caf = function(id) { clearTimeout(id); };\n        }\n\n        // Detect SVG support\n        features.svg = !!document.createElementNS &&\n          !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n\n        framework.features = features;\n\n        return features;\n      }\n    };\n\n    framework.detectFeatures();\n\n// Override addEventListener for old versions of IE\n    if(framework.features.oldIE) {\n\n      framework.bind = function(target, type, listener, unbind) {\n\n        type = type.split(' ');\n\n        var methodName = (unbind ? 'detach' : 'attach') + 'Event',\n          evName,\n          _handleEv = function() {\n            listener.handleEvent.call(listener);\n          };\n\n        for(var i = 0; i < type.length; i++) {\n          evName = type[i];\n          if(evName) {\n\n            if(typeof listener === 'object' && listener.handleEvent) {\n              if(!unbind) {\n                listener['oldIE' + evName] = _handleEv;\n              } else {\n                if(!listener['oldIE' + evName]) {\n                  return false;\n                }\n              }\n\n              target[methodName]( 'on' + evName, listener['oldIE' + evName]);\n            } else {\n              target[methodName]( 'on' + evName, listener);\n            }\n\n          }\n        }\n      };\n\n    }\n\n    /*>>framework-bridge*/\n\n    /*>>core*/\n//function(template, UiClass, items, options)\n\n    var self = this;\n\n    /**\n     * Static vars, don't change unless you know what you're doing.\n     */\n    var DOUBLE_TAP_RADIUS = 25,\n      NUM_HOLDERS = 3;\n\n    /**\n     * Options\n     */\n    var _options = {\n      allowPanToNext:true,\n      spacing: 0.12,\n      bgOpacity: 1,\n      mouseUsed: false,\n      loop: true,\n      pinchToClose: true,\n      closeOnScroll: true,\n      closeOnVerticalDrag: true,\n      verticalDragRange: 0.75,\n      hideAnimationDuration: 333,\n      showAnimationDuration: 333,\n      showHideOpacity: false,\n      focus: true,\n      escKey: true,\n      arrowKeys: true,\n      mainScrollEndFriction: 0.35,\n      panEndFriction: 0.35,\n      isClickableElement: function(el) {\n        return el.tagName === 'A';\n      },\n      getDoubleTapZoom: function(isMouseClick, item) {\n        if(isMouseClick) {\n          return 1;\n        } else {\n          return item.initialZoomLevel < 0.7 ? 1 : 1.33;\n        }\n      },\n      maxSpreadZoom: 1.33,\n      modal: true,\n\n      // not fully implemented yet\n      scaleMode: 'fit' // TODO\n    };\n    framework.extend(_options, options);\n\n\n    /**\n     * Private helper variables & functions\n     */\n\n    var _getEmptyPoint = function() {\n      return {x:0,y:0};\n    };\n\n    var _isOpen,\n      _isDestroying,\n      _closedByScroll,\n      _currentItemIndex,\n      _containerStyle,\n      _containerShiftIndex,\n      _currPanDist = _getEmptyPoint(),\n      _startPanOffset = _getEmptyPoint(),\n      _panOffset = _getEmptyPoint(),\n      _upMoveEvents, // drag move, drag end & drag cancel events array\n      _downEvents, // drag start events array\n      _globalEventHandlers,\n      _viewportSize = {},\n      _currZoomLevel,\n      _startZoomLevel,\n      _translatePrefix,\n      _translateSufix,\n      _updateSizeInterval,\n      _itemsNeedUpdate,\n      _currPositionIndex = 0,\n      _offset = {},\n      _slideSize = _getEmptyPoint(), // size of slide area, including spacing\n      _itemHolders,\n      _prevItemIndex,\n      _indexDiff = 0, // difference of indexes since last content update\n      _dragStartEvent,\n      _dragMoveEvent,\n      _dragEndEvent,\n      _dragCancelEvent,\n      _transformKey,\n      _pointerEventEnabled,\n      _isFixedPosition = true,\n      _likelyTouchDevice,\n      _modules = [],\n      _requestAF,\n      _cancelAF,\n      _initalClassName,\n      _initalWindowScrollY,\n      _oldIE,\n      _currentWindowScrollY,\n      _features,\n      _windowVisibleSize = {},\n      _renderMaxResolution = false,\n\n      // Registers PhotoSWipe module (History, Controller ...)\n      _registerModule = function(name, module) {\n        framework.extend(self, module.publicMethods);\n        _modules.push(name);\n      },\n\n      _getLoopedId = function(index) {\n        var numSlides = _getNumItems();\n        if(index > numSlides - 1) {\n          return index - numSlides;\n        } else  if(index < 0) {\n          return numSlides + index;\n        }\n        return index;\n      },\n\n      // Micro bind/trigger\n      _listeners = {},\n      _listen = function(name, fn) {\n        if(!_listeners[name]) {\n          _listeners[name] = [];\n        }\n        return _listeners[name].push(fn);\n      },\n      _shout = function(name) {\n        var listeners = _listeners[name];\n\n        if(listeners) {\n          var args = Array.prototype.slice.call(arguments);\n          args.shift();\n\n          for(var i = 0; i < listeners.length; i++) {\n            listeners[i].apply(self, args);\n          }\n        }\n      },\n\n      _getCurrentTime = function() {\n        return new Date().getTime();\n      },\n      _applyBgOpacity = function(opacity) {\n        _bgOpacity = opacity;\n        self.bg.style.opacity = opacity * _options.bgOpacity;\n      },\n\n      _applyZoomTransform = function(styleObj,x,y,zoom,item) {\n        if(!_renderMaxResolution || (item && item !== self.currItem) ) {\n          zoom = zoom / (item ? item.fitRatio : self.currItem.fitRatio);\n        }\n\n        styleObj[_transformKey] = _translatePrefix + x + 'px, ' + y + 'px' + _translateSufix + ' scale(' + zoom + ')';\n      },\n      _applyCurrentZoomPan = function( allowRenderResolution ) {\n        if(_currZoomElementStyle) {\n\n          if(allowRenderResolution) {\n            if(_currZoomLevel > self.currItem.fitRatio) {\n              if(!_renderMaxResolution) {\n                _setImageSize(self.currItem, false, true);\n                _renderMaxResolution = true;\n              }\n            } else {\n              if(_renderMaxResolution) {\n                _setImageSize(self.currItem);\n                _renderMaxResolution = false;\n              }\n            }\n          }\n\n\n          _applyZoomTransform(_currZoomElementStyle, _panOffset.x, _panOffset.y, _currZoomLevel);\n        }\n      },\n      _applyZoomPanToItem = function(item) {\n        if(item.container) {\n\n          _applyZoomTransform(item.container.style,\n            item.initialPosition.x,\n            item.initialPosition.y,\n            item.initialZoomLevel,\n            item);\n        }\n      },\n      _setTranslateX = function(x, elStyle) {\n        elStyle[_transformKey] = _translatePrefix + x + 'px, 0px' + _translateSufix;\n      },\n      _moveMainScroll = function(x, dragging) {\n\n        if(!_options.loop && dragging) {\n          var newSlideIndexOffset = _currentItemIndex + (_slideSize.x * _currPositionIndex - x) / _slideSize.x,\n            delta = Math.round(x - _mainScrollPos.x);\n\n          if( (newSlideIndexOffset < 0 && delta > 0) ||\n            (newSlideIndexOffset >= _getNumItems() - 1 && delta < 0) ) {\n            x = _mainScrollPos.x + delta * _options.mainScrollEndFriction;\n          }\n        }\n\n        _mainScrollPos.x = x;\n        _setTranslateX(x, _containerStyle);\n      },\n      _calculatePanOffset = function(axis, zoomLevel) {\n        var m = _midZoomPoint[axis] - _offset[axis];\n        return _startPanOffset[axis] + _currPanDist[axis] + m - m * ( zoomLevel / _startZoomLevel );\n      },\n\n      _equalizePoints = function(p1, p2) {\n        p1.x = p2.x;\n        p1.y = p2.y;\n        if(p2.id) {\n          p1.id = p2.id;\n        }\n      },\n      _roundPoint = function(p) {\n        p.x = Math.round(p.x);\n        p.y = Math.round(p.y);\n      },\n\n      _mouseMoveTimeout = null,\n      _onFirstMouseMove = function() {\n        // Wait until mouse move event is fired at least twice during 100ms\n        // We do this, because some mobile browsers trigger it on touchstart\n        if(_mouseMoveTimeout ) {\n          framework.unbind(document, 'mousemove', _onFirstMouseMove);\n          framework.addClass(template, 'pswp--has_mouse');\n          _options.mouseUsed = true;\n          _shout('mouseUsed');\n        }\n        _mouseMoveTimeout = setTimeout(function() {\n          _mouseMoveTimeout = null;\n        }, 100);\n      },\n\n      _bindEvents = function() {\n        framework.bind(document, 'keydown', self);\n\n        if(_features.transform) {\n          // don't bind click event in browsers that don't support transform (mostly IE8)\n          framework.bind(self.scrollWrap, 'click', self);\n        }\n\n\n        if(!_options.mouseUsed) {\n          framework.bind(document, 'mousemove', _onFirstMouseMove);\n        }\n\n        framework.bind(window, 'resize scroll', self);\n\n        _shout('bindEvents');\n      },\n\n      _unbindEvents = function() {\n        framework.unbind(window, 'resize', self);\n        framework.unbind(window, 'scroll', _globalEventHandlers.scroll);\n        framework.unbind(document, 'keydown', self);\n        framework.unbind(document, 'mousemove', _onFirstMouseMove);\n\n        if(_features.transform) {\n          framework.unbind(self.scrollWrap, 'click', self);\n        }\n\n        if(_isDragging) {\n          framework.unbind(window, _upMoveEvents, self);\n        }\n\n        _shout('unbindEvents');\n      },\n\n      _calculatePanBounds = function(zoomLevel, update) {\n        var bounds = _calculateItemSize( self.currItem, _viewportSize, zoomLevel );\n        if(update) {\n          _currPanBounds = bounds;\n        }\n        return bounds;\n      },\n\n      _getMinZoomLevel = function(item) {\n        if(!item) {\n          item = self.currItem;\n        }\n        return item.initialZoomLevel;\n      },\n      _getMaxZoomLevel = function(item) {\n        if(!item) {\n          item = self.currItem;\n        }\n        return item.w > 0 ? _options.maxSpreadZoom : 1;\n      },\n\n      // Return true if offset is out of the bounds\n      _modifyDestPanOffset = function(axis, destPanBounds, destPanOffset, destZoomLevel) {\n        if(destZoomLevel === self.currItem.initialZoomLevel) {\n          destPanOffset[axis] = self.currItem.initialPosition[axis];\n          return true;\n        } else {\n          destPanOffset[axis] = _calculatePanOffset(axis, destZoomLevel);\n\n          if(destPanOffset[axis] > destPanBounds.min[axis]) {\n            destPanOffset[axis] = destPanBounds.min[axis];\n            return true;\n          } else if(destPanOffset[axis] < destPanBounds.max[axis] ) {\n            destPanOffset[axis] = destPanBounds.max[axis];\n            return true;\n          }\n        }\n        return false;\n      },\n\n      _setupTransforms = function() {\n\n        if(_transformKey) {\n          // setup 3d transforms\n          var allow3dTransform = _features.perspective && !_likelyTouchDevice;\n          _translatePrefix = 'translate' + (allow3dTransform ? '3d(' : '(');\n          _translateSufix = _features.perspective ? ', 0px)' : ')';\n          return;\n        }\n\n        // Override zoom/pan/move functions in case old browser is used (most likely IE)\n        // (so they use left/top/width/height, instead of CSS transform)\n\n        _transformKey = 'left';\n        framework.addClass(template, 'pswp--ie');\n\n        _setTranslateX = function(x, elStyle) {\n          elStyle.left = x + 'px';\n        };\n        _applyZoomPanToItem = function(item) {\n\n          var zoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n            s = item.container.style,\n            w = zoomRatio * item.w,\n            h = zoomRatio * item.h;\n\n          s.width = w + 'px';\n          s.height = h + 'px';\n          s.left = item.initialPosition.x + 'px';\n          s.top = item.initialPosition.y + 'px';\n\n        };\n        _applyCurrentZoomPan = function() {\n          if(_currZoomElementStyle) {\n\n            var s = _currZoomElementStyle,\n              item = self.currItem,\n              zoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n              w = zoomRatio * item.w,\n              h = zoomRatio * item.h;\n\n            s.width = w + 'px';\n            s.height = h + 'px';\n\n\n            s.left = _panOffset.x + 'px';\n            s.top = _panOffset.y + 'px';\n          }\n\n        };\n      },\n\n      _onKeyDown = function(e) {\n        var keydownAction = '';\n        if(_options.escKey && e.keyCode === 27) {\n          keydownAction = 'close';\n        } else if(_options.arrowKeys) {\n          if(e.keyCode === 37) {\n            keydownAction = 'prev';\n          } else if(e.keyCode === 39) {\n            keydownAction = 'next';\n          }\n        }\n\n        if(keydownAction) {\n          // don't do anything if special key pressed to prevent from overriding default browser actions\n          // e.g. in Chrome on Mac cmd+arrow-left returns to previous page\n          if( !e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey ) {\n            if(e.preventDefault) {\n              e.preventDefault();\n            } else {\n              e.returnValue = false;\n            }\n            self[keydownAction]();\n          }\n        }\n      },\n\n      _onGlobalClick = function(e) {\n        if(!e) {\n          return;\n        }\n\n        // don't allow click event to pass through when triggering after drag or some other gesture\n        if(_moved || _zoomStarted || _mainScrollAnimating || _verticalDragInitiated) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      },\n\n      _updatePageScrollOffset = function() {\n        self.setScrollOffset(0, framework.getScrollY());\n      };\n\n\n\n\n\n\n\n// Micro animation engine\n    var _animations = {},\n      _numAnimations = 0,\n      _stopAnimation = function(name) {\n        if(_animations[name]) {\n          if(_animations[name].raf) {\n            _cancelAF( _animations[name].raf );\n          }\n          _numAnimations--;\n          delete _animations[name];\n        }\n      },\n      _registerStartAnimation = function(name) {\n        if(_animations[name]) {\n          _stopAnimation(name);\n        }\n        if(!_animations[name]) {\n          _numAnimations++;\n          _animations[name] = {};\n        }\n      },\n      _stopAllAnimations = function() {\n        for (var prop in _animations) {\n\n          if( _animations.hasOwnProperty( prop ) ) {\n            _stopAnimation(prop);\n          }\n\n        }\n      },\n      _animateProp = function(name, b, endProp, d, easingFn, onUpdate, onComplete) {\n        var startAnimTime = _getCurrentTime(), t;\n        _registerStartAnimation(name);\n\n        var animloop = function(){\n          if ( _animations[name] ) {\n\n            t = _getCurrentTime() - startAnimTime; // time diff\n            //b - beginning (start prop)\n            //d - anim duration\n\n            if ( t >= d ) {\n              _stopAnimation(name);\n              onUpdate(endProp);\n              if(onComplete) {\n                onComplete();\n              }\n              return;\n            }\n            onUpdate( (endProp - b) * easingFn(t/d) + b );\n\n            _animations[name].raf = _requestAF(animloop);\n          }\n        };\n        animloop();\n      };\n\n\n\n    var publicMethods = {\n\n      // make a few local variables and functions public\n      shout: _shout,\n      listen: _listen,\n      viewportSize: _viewportSize,\n      options: _options,\n\n      isMainScrollAnimating: function() {\n        return _mainScrollAnimating;\n      },\n      getZoomLevel: function() {\n        return _currZoomLevel;\n      },\n      getCurrentIndex: function() {\n        return _currentItemIndex;\n      },\n      isDragging: function() {\n        return _isDragging;\n      },\n      isZooming: function() {\n        return _isZooming;\n      },\n      setScrollOffset: function(x,y) {\n        _offset.x = x;\n        _currentWindowScrollY = _offset.y = y;\n        _shout('updateScrollOffset', _offset);\n      },\n      applyZoomPan: function(zoomLevel,panX,panY,allowRenderResolution) {\n        _panOffset.x = panX;\n        _panOffset.y = panY;\n        _currZoomLevel = zoomLevel;\n        _applyCurrentZoomPan( allowRenderResolution );\n      },\n\n      init: function() {\n\n        if(_isOpen || _isDestroying) {\n          return;\n        }\n\n        var i;\n\n        self.framework = framework; // basic functionality\n        self.template = template; // root DOM element of PhotoSwipe\n        self.bg = framework.getChildByClass(template, 'pswp__bg');\n\n        _initalClassName = template.className;\n        _isOpen = true;\n\n        _features = framework.detectFeatures();\n        _requestAF = _features.raf;\n        _cancelAF = _features.caf;\n        _transformKey = _features.transform;\n        _oldIE = _features.oldIE;\n\n        self.scrollWrap = framework.getChildByClass(template, 'pswp__scroll-wrap');\n        self.container = framework.getChildByClass(self.scrollWrap, 'pswp__container');\n\n        _containerStyle = self.container.style; // for fast access\n\n        // Objects that hold slides (there are only 3 in DOM)\n        self.itemHolders = _itemHolders = [\n          {el:self.container.children[0] , wrap:0, index: -1},\n          {el:self.container.children[1] , wrap:0, index: -1},\n          {el:self.container.children[2] , wrap:0, index: -1}\n        ];\n\n        // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n        _itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'none';\n\n        _setupTransforms();\n\n        // Setup global events\n        _globalEventHandlers = {\n          resize: self.updateSize,\n          scroll: _updatePageScrollOffset,\n          keydown: _onKeyDown,\n          click: _onGlobalClick\n        };\n\n        // disable show/hide effects on old browsers that don't support CSS animations or transforms,\n        // old IOS, Android and Opera mobile. Blackberry seems to work fine, even older models.\n        var oldPhone = _features.isOldIOSPhone || _features.isOldAndroid || _features.isMobileOpera;\n        if(!_features.animationName || !_features.transform || oldPhone) {\n          _options.showAnimationDuration = _options.hideAnimationDuration = 0;\n        }\n\n        // init modules\n        for(i = 0; i < _modules.length; i++) {\n          self['init' + _modules[i]]();\n        }\n\n        // init\n        if(UiClass) {\n          var ui = self.ui = new UiClass(self, framework);\n          ui.init();\n        }\n\n        _shout('firstUpdate');\n        _currentItemIndex = _currentItemIndex || _options.index || 0;\n        // validate index\n        if( isNaN(_currentItemIndex) || _currentItemIndex < 0 || _currentItemIndex >= _getNumItems() ) {\n          _currentItemIndex = 0;\n        }\n        self.currItem = _getItemAt( _currentItemIndex );\n\n\n        if(_features.isOldIOSPhone || _features.isOldAndroid) {\n          _isFixedPosition = false;\n        }\n\n        template.setAttribute('aria-hidden', 'false');\n        if(_options.modal) {\n          if(!_isFixedPosition) {\n            template.style.position = 'absolute';\n            template.style.top = framework.getScrollY() + 'px';\n          } else {\n            template.style.position = 'fixed';\n          }\n        }\n\n        if(_currentWindowScrollY === undefined) {\n          _shout('initialLayout');\n          _currentWindowScrollY = _initalWindowScrollY = framework.getScrollY();\n        }\n\n        // add classes to root element of PhotoSwipe\n        var rootClasses = 'pswp--open ';\n        if(_options.mainClass) {\n          rootClasses += _options.mainClass + ' ';\n        }\n        if(_options.showHideOpacity) {\n          rootClasses += 'pswp--animate_opacity ';\n        }\n        rootClasses += _likelyTouchDevice ? 'pswp--touch' : 'pswp--notouch';\n        rootClasses += _features.animationName ? ' pswp--css_animation' : '';\n        rootClasses += _features.svg ? ' pswp--svg' : '';\n        framework.addClass(template, rootClasses);\n\n        self.updateSize();\n\n        // initial update\n        _containerShiftIndex = -1;\n        _indexDiff = null;\n        for(i = 0; i < NUM_HOLDERS; i++) {\n          _setTranslateX( (i+_containerShiftIndex) * _slideSize.x, _itemHolders[i].el.style);\n        }\n\n        if(!_oldIE) {\n          framework.bind(self.scrollWrap, _downEvents, self); // no dragging for old IE\n        }\n\n        _listen('initialZoomInEnd', function() {\n          self.setContent(_itemHolders[0], _currentItemIndex-1);\n          self.setContent(_itemHolders[2], _currentItemIndex+1);\n\n          _itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'block';\n\n          if(_options.focus) {\n            // focus causes layout,\n            // which causes lag during the animation,\n            // that's why we delay it untill the initial zoom transition ends\n            template.focus();\n          }\n\n\n          _bindEvents();\n        });\n\n        // set content for center slide (first time)\n        self.setContent(_itemHolders[1], _currentItemIndex);\n\n        self.updateCurrItem();\n\n        _shout('afterInit');\n\n        if(!_isFixedPosition) {\n\n          // On all versions of iOS lower than 8.0, we check size of viewport every second.\n          //\n          // This is done to detect when Safari top & bottom bars appear,\n          // as this action doesn't trigger any events (like resize).\n          //\n          // On iOS8 they fixed this.\n          //\n          // 10 Nov 2014: iOS 7 usage ~40%. iOS 8 usage 56%.\n\n          _updateSizeInterval = setInterval(function() {\n            if(!_numAnimations && !_isDragging && !_isZooming && (_currZoomLevel === self.currItem.initialZoomLevel)  ) {\n              self.updateSize();\n            }\n          }, 1000);\n        }\n\n        framework.addClass(template, 'pswp--visible');\n      },\n\n      // Close the gallery, then destroy it\n      close: function() {\n        if(!_isOpen) {\n          return;\n        }\n\n        _isOpen = false;\n        _isDestroying = true;\n        _shout('close');\n        _unbindEvents();\n\n        _showOrHide(self.currItem, null, true, self.destroy);\n      },\n\n      // destroys the gallery (unbinds events, cleans up intervals and timeouts to avoid memory leaks)\n      destroy: function() {\n        _shout('destroy');\n\n        if(_showOrHideTimeout) {\n          clearTimeout(_showOrHideTimeout);\n        }\n\n        template.setAttribute('aria-hidden', 'true');\n        template.className = _initalClassName;\n\n        if(_updateSizeInterval) {\n          clearInterval(_updateSizeInterval);\n        }\n\n        framework.unbind(self.scrollWrap, _downEvents, self);\n\n        // we unbind scroll event at the end, as closing animation may depend on it\n        framework.unbind(window, 'scroll', self);\n\n        _stopDragUpdateLoop();\n\n        _stopAllAnimations();\n\n        _listeners = null;\n      },\n\n      /**\n       * Pan image to position\n       * @param {Number} x\n       * @param {Number} y\n       * @param {Boolean} force Will ignore bounds if set to true.\n       */\n      panTo: function(x,y,force) {\n        if(!force) {\n          if(x > _currPanBounds.min.x) {\n            x = _currPanBounds.min.x;\n          } else if(x < _currPanBounds.max.x) {\n            x = _currPanBounds.max.x;\n          }\n\n          if(y > _currPanBounds.min.y) {\n            y = _currPanBounds.min.y;\n          } else if(y < _currPanBounds.max.y) {\n            y = _currPanBounds.max.y;\n          }\n        }\n\n        _panOffset.x = x;\n        _panOffset.y = y;\n        _applyCurrentZoomPan();\n      },\n\n      handleEvent: function (e) {\n        e = e || window.event;\n        if(_globalEventHandlers[e.type]) {\n          _globalEventHandlers[e.type](e);\n        }\n      },\n\n\n      goTo: function(index) {\n\n        index = _getLoopedId(index);\n\n        var diff = index - _currentItemIndex;\n        _indexDiff = diff;\n\n        _currentItemIndex = index;\n        self.currItem = _getItemAt( _currentItemIndex );\n        _currPositionIndex -= diff;\n\n        _moveMainScroll(_slideSize.x * _currPositionIndex);\n\n\n        _stopAllAnimations();\n        _mainScrollAnimating = false;\n\n        self.updateCurrItem();\n      },\n      next: function() {\n        self.goTo( _currentItemIndex + 1);\n      },\n      prev: function() {\n        self.goTo( _currentItemIndex - 1);\n      },\n\n      // update current zoom/pan objects\n      updateCurrZoomItem: function(emulateSetContent) {\n        if(emulateSetContent) {\n          _shout('beforeChange', 0);\n        }\n\n        // itemHolder[1] is middle (current) item\n        if(_itemHolders[1].el.children.length) {\n          var zoomElement = _itemHolders[1].el.children[0];\n          if( framework.hasClass(zoomElement, 'pswp__zoom-wrap') ) {\n            _currZoomElementStyle = zoomElement.style;\n          } else {\n            _currZoomElementStyle = null;\n          }\n        } else {\n          _currZoomElementStyle = null;\n        }\n\n        _currPanBounds = self.currItem.bounds;\n        _startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n\n        _panOffset.x = _currPanBounds.center.x;\n        _panOffset.y = _currPanBounds.center.y;\n\n        if(emulateSetContent) {\n          _shout('afterChange');\n        }\n      },\n\n\n      invalidateCurrItems: function() {\n        _itemsNeedUpdate = true;\n        for(var i = 0; i < NUM_HOLDERS; i++) {\n          if( _itemHolders[i].item ) {\n            _itemHolders[i].item.needsUpdate = true;\n          }\n        }\n      },\n\n      updateCurrItem: function(beforeAnimation) {\n\n        if(_indexDiff === 0) {\n          return;\n        }\n\n        var diffAbs = Math.abs(_indexDiff),\n          tempHolder;\n\n        if(beforeAnimation && diffAbs < 2) {\n          return;\n        }\n\n\n        self.currItem = _getItemAt( _currentItemIndex );\n        _renderMaxResolution = false;\n\n        _shout('beforeChange', _indexDiff);\n\n        if(diffAbs >= NUM_HOLDERS) {\n          _containerShiftIndex += _indexDiff + (_indexDiff > 0 ? -NUM_HOLDERS : NUM_HOLDERS);\n          diffAbs = NUM_HOLDERS;\n        }\n        for(var i = 0; i < diffAbs; i++) {\n          if(_indexDiff > 0) {\n            tempHolder = _itemHolders.shift();\n            _itemHolders[NUM_HOLDERS-1] = tempHolder; // move first to last\n\n            _containerShiftIndex++;\n            _setTranslateX( (_containerShiftIndex+2) * _slideSize.x, tempHolder.el.style);\n            self.setContent(tempHolder, _currentItemIndex - diffAbs + i + 1 + 1);\n          } else {\n            tempHolder = _itemHolders.pop();\n            _itemHolders.unshift( tempHolder ); // move last to first\n\n            _containerShiftIndex--;\n            _setTranslateX( _containerShiftIndex * _slideSize.x, tempHolder.el.style);\n            self.setContent(tempHolder, _currentItemIndex + diffAbs - i - 1 - 1);\n          }\n\n        }\n\n        // reset zoom/pan on previous item\n        if(_currZoomElementStyle && Math.abs(_indexDiff) === 1) {\n\n          var prevItem = _getItemAt(_prevItemIndex);\n          if(prevItem.initialZoomLevel !== _currZoomLevel) {\n            _calculateItemSize(prevItem , _viewportSize );\n            _setImageSize(prevItem);\n            _applyZoomPanToItem( prevItem );\n          }\n\n        }\n\n        // reset diff after update\n        _indexDiff = 0;\n\n        self.updateCurrZoomItem();\n\n        _prevItemIndex = _currentItemIndex;\n\n        _shout('afterChange');\n\n      },\n\n\n\n      updateSize: function(force) {\n\n        if(!_isFixedPosition && _options.modal) {\n          var windowScrollY = framework.getScrollY();\n          if(_currentWindowScrollY !== windowScrollY) {\n            template.style.top = windowScrollY + 'px';\n            _currentWindowScrollY = windowScrollY;\n          }\n          if(!force && _windowVisibleSize.x === window.innerWidth && _windowVisibleSize.y === window.innerHeight) {\n            return;\n          }\n          _windowVisibleSize.x = window.innerWidth;\n          _windowVisibleSize.y = window.innerHeight;\n\n          //template.style.width = _windowVisibleSize.x + 'px';\n          template.style.height = _windowVisibleSize.y + 'px';\n        }\n\n\n\n        _viewportSize.x = self.scrollWrap.clientWidth;\n        _viewportSize.y = self.scrollWrap.clientHeight;\n\n        _updatePageScrollOffset();\n\n        _slideSize.x = _viewportSize.x + Math.round(_viewportSize.x * _options.spacing);\n        _slideSize.y = _viewportSize.y;\n\n        _moveMainScroll(_slideSize.x * _currPositionIndex);\n\n        _shout('beforeResize'); // even may be used for example to switch image sources\n\n\n        // don't re-calculate size on inital size update\n        if(_containerShiftIndex !== undefined) {\n\n          var holder,\n            item,\n            hIndex;\n\n          for(var i = 0; i < NUM_HOLDERS; i++) {\n            holder = _itemHolders[i];\n            _setTranslateX( (i+_containerShiftIndex) * _slideSize.x, holder.el.style);\n\n            hIndex = _currentItemIndex+i-1;\n\n            if(_options.loop && _getNumItems() > 2) {\n              hIndex = _getLoopedId(hIndex);\n            }\n\n            // update zoom level on items and refresh source (if needsUpdate)\n            item = _getItemAt( hIndex );\n\n            // re-render gallery item if `needsUpdate`,\n            // or doesn't have `bounds` (entirely new slide object)\n            if( item && (_itemsNeedUpdate || item.needsUpdate || !item.bounds) ) {\n\n              self.cleanSlide( item );\n\n              self.setContent( holder, hIndex );\n\n              // if \"center\" slide\n              if(i === 1) {\n                self.currItem = item;\n                self.updateCurrZoomItem(true);\n              }\n\n              item.needsUpdate = false;\n\n            } else if(holder.index === -1 && hIndex >= 0) {\n              // add content first time\n              self.setContent( holder, hIndex );\n            }\n            if(item && item.container) {\n              _calculateItemSize(item, _viewportSize);\n              _setImageSize(item);\n              _applyZoomPanToItem( item );\n            }\n\n          }\n          _itemsNeedUpdate = false;\n        }\n\n        _startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n        _currPanBounds = self.currItem.bounds;\n\n        if(_currPanBounds) {\n          _panOffset.x = _currPanBounds.center.x;\n          _panOffset.y = _currPanBounds.center.y;\n          _applyCurrentZoomPan( true );\n        }\n\n        _shout('resize');\n      },\n\n      // Zoom current item to\n      zoomTo: function(destZoomLevel, centerPoint, speed, easingFn, updateFn) {\n        /*\n         if(destZoomLevel === 'fit') {\n         destZoomLevel = self.currItem.fitRatio;\n         } else if(destZoomLevel === 'fill') {\n         destZoomLevel = self.currItem.fillRatio;\n         }\n         */\n\n        if(centerPoint) {\n          _startZoomLevel = _currZoomLevel;\n          _midZoomPoint.x = Math.abs(centerPoint.x) - _panOffset.x ;\n          _midZoomPoint.y = Math.abs(centerPoint.y) - _panOffset.y ;\n          _equalizePoints(_startPanOffset, _panOffset);\n        }\n\n        var destPanBounds = _calculatePanBounds(destZoomLevel, false),\n          destPanOffset = {};\n\n        _modifyDestPanOffset('x', destPanBounds, destPanOffset, destZoomLevel);\n        _modifyDestPanOffset('y', destPanBounds, destPanOffset, destZoomLevel);\n\n        var initialZoomLevel = _currZoomLevel;\n        var initialPanOffset = {\n          x: _panOffset.x,\n          y: _panOffset.y\n        };\n\n        _roundPoint(destPanOffset);\n\n        var onUpdate = function(now) {\n          if(now === 1) {\n            _currZoomLevel = destZoomLevel;\n            _panOffset.x = destPanOffset.x;\n            _panOffset.y = destPanOffset.y;\n          } else {\n            _currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n            _panOffset.x = (destPanOffset.x - initialPanOffset.x) * now + initialPanOffset.x;\n            _panOffset.y = (destPanOffset.y - initialPanOffset.y) * now + initialPanOffset.y;\n          }\n\n          if(updateFn) {\n            updateFn(now);\n          }\n\n          _applyCurrentZoomPan( now === 1 );\n        };\n\n        if(speed) {\n          _animateProp('customZoomTo', 0, 1, speed, easingFn || framework.easing.sine.inOut, onUpdate);\n        } else {\n          onUpdate(1);\n        }\n      }\n\n\n    };\n\n\n    /*>>core*/\n\n    /*>>gestures*/\n    /**\n     * Mouse/touch/pointer event handlers.\n     *\n     * separated from @core.js for readability\n     */\n\n    var MIN_SWIPE_DISTANCE = 30,\n      DIRECTION_CHECK_OFFSET = 10; // amount of pixels to drag to determine direction of swipe\n\n    var _gestureStartTime,\n      _gestureCheckSpeedTime,\n\n      // pool of objects that are used during dragging of zooming\n      p = {}, // first point\n      p2 = {}, // second point (for zoom gesture)\n      delta = {},\n      _currPoint = {},\n      _startPoint = {},\n      _currPointers = [],\n      _startMainScrollPos = {},\n      _releaseAnimData,\n      _posPoints = [], // array of points during dragging, used to determine type of gesture\n      _tempPoint = {},\n\n      _isZoomingIn,\n      _verticalDragInitiated,\n      _oldAndroidTouchEndTimeout,\n      _currZoomedItemIndex = 0,\n      _centerPoint = _getEmptyPoint(),\n      _lastReleaseTime = 0,\n      _isDragging, // at least one pointer is down\n      _isMultitouch, // at least two _pointers are down\n      _zoomStarted, // zoom level changed during zoom gesture\n      _moved,\n      _dragAnimFrame,\n      _mainScrollShifted,\n      _currentPoints, // array of current touch points\n      _isZooming,\n      _currPointsDistance,\n      _startPointsDistance,\n      _currPanBounds,\n      _mainScrollPos = _getEmptyPoint(),\n      _currZoomElementStyle,\n      _mainScrollAnimating, // true, if animation after swipe gesture is running\n      _midZoomPoint = _getEmptyPoint(),\n      _currCenterPoint = _getEmptyPoint(),\n      _direction,\n      _isFirstMove,\n      _opacityChanged,\n      _bgOpacity,\n      _wasOverInitialZoom,\n\n      _isEqualPoints = function(p1, p2) {\n        return p1.x === p2.x && p1.y === p2.y;\n      },\n      _isNearbyPoints = function(touch0, touch1) {\n        return Math.abs(touch0.x - touch1.x) < DOUBLE_TAP_RADIUS && Math.abs(touch0.y - touch1.y) < DOUBLE_TAP_RADIUS;\n      },\n      _calculatePointsDistance = function(p1, p2) {\n        _tempPoint.x = Math.abs( p1.x - p2.x );\n        _tempPoint.y = Math.abs( p1.y - p2.y );\n        return Math.sqrt(_tempPoint.x * _tempPoint.x + _tempPoint.y * _tempPoint.y);\n      },\n      _stopDragUpdateLoop = function() {\n        if(_dragAnimFrame) {\n          _cancelAF(_dragAnimFrame);\n          _dragAnimFrame = null;\n        }\n      },\n      _dragUpdateLoop = function() {\n        if(_isDragging) {\n          _dragAnimFrame = _requestAF(_dragUpdateLoop);\n          _renderMovement();\n        }\n      },\n      _canPan = function() {\n        return !(_options.scaleMode === 'fit' && _currZoomLevel ===  self.currItem.initialZoomLevel);\n      },\n\n      // find the closest parent DOM element\n      _closestElement = function(el, fn) {\n        if(!el || el === document) {\n          return false;\n        }\n\n        // don't search elements above pswp__scroll-wrap\n        if(el.getAttribute('class') && el.getAttribute('class').indexOf('pswp__scroll-wrap') > -1 ) {\n          return false;\n        }\n\n        if( fn(el) ) {\n          return el;\n        }\n\n        return _closestElement(el.parentNode, fn);\n      },\n\n      _preventObj = {},\n      _preventDefaultEventBehaviour = function(e, isDown) {\n        _preventObj.prevent = !_closestElement(e.target, _options.isClickableElement);\n\n        _shout('preventDragEvent', e, isDown, _preventObj);\n        return _preventObj.prevent;\n\n      },\n      _convertTouchToPoint = function(touch, p) {\n        p.x = touch.pageX;\n        p.y = touch.pageY;\n        p.id = touch.identifier;\n        return p;\n      },\n      _findCenterOfPoints = function(p1, p2, pCenter) {\n        pCenter.x = (p1.x + p2.x) * 0.5;\n        pCenter.y = (p1.y + p2.y) * 0.5;\n      },\n      _pushPosPoint = function(time, x, y) {\n        if(time - _gestureCheckSpeedTime > 50) {\n          var o = _posPoints.length > 2 ? _posPoints.shift() : {};\n          o.x = x;\n          o.y = y;\n          _posPoints.push(o);\n          _gestureCheckSpeedTime = time;\n        }\n      },\n\n      _calculateVerticalDragOpacityRatio = function() {\n        var yOffset = _panOffset.y - self.currItem.initialPosition.y; // difference between initial and current position\n        return 1 -  Math.abs( yOffset / (_viewportSize.y / 2)  );\n      },\n\n\n      // points pool, reused during touch events\n      _ePoint1 = {},\n      _ePoint2 = {},\n      _tempPointsArr = [],\n      _tempCounter,\n      _getTouchPoints = function(e) {\n        // clean up previous points, without recreating array\n        while(_tempPointsArr.length > 0) {\n          _tempPointsArr.pop();\n        }\n\n        if(!_pointerEventEnabled) {\n          if(e.type.indexOf('touch') > -1) {\n\n            if(e.touches && e.touches.length > 0) {\n              _tempPointsArr[0] = _convertTouchToPoint(e.touches[0], _ePoint1);\n              if(e.touches.length > 1) {\n                _tempPointsArr[1] = _convertTouchToPoint(e.touches[1], _ePoint2);\n              }\n            }\n\n          } else {\n            _ePoint1.x = e.pageX;\n            _ePoint1.y = e.pageY;\n            _ePoint1.id = '';\n            _tempPointsArr[0] = _ePoint1;//_ePoint1;\n          }\n        } else {\n          _tempCounter = 0;\n          // we can use forEach, as pointer events are supported only in modern browsers\n          _currPointers.forEach(function(p) {\n            if(_tempCounter === 0) {\n              _tempPointsArr[0] = p;\n            } else if(_tempCounter === 1) {\n              _tempPointsArr[1] = p;\n            }\n            _tempCounter++;\n\n          });\n        }\n        return _tempPointsArr;\n      },\n\n      _panOrMoveMainScroll = function(axis, delta) {\n\n        var panFriction,\n          overDiff = 0,\n          newOffset = _panOffset[axis] + delta[axis],\n          startOverDiff,\n          dir = delta[axis] > 0,\n          newMainScrollPosition = _mainScrollPos.x + delta.x,\n          mainScrollDiff = _mainScrollPos.x - _startMainScrollPos.x,\n          newPanPos,\n          newMainScrollPos;\n\n        // calculate fdistance over the bounds and friction\n        if(newOffset > _currPanBounds.min[axis] || newOffset < _currPanBounds.max[axis]) {\n          panFriction = _options.panEndFriction;\n          // Linear increasing of friction, so at 1/4 of viewport it's at max value.\n          // Looks not as nice as was expected. Left for history.\n          // panFriction = (1 - (_panOffset[axis] + delta[axis] + panBounds.min[axis]) / (_viewportSize[axis] / 4) );\n        } else {\n          panFriction = 1;\n        }\n\n        newOffset = _panOffset[axis] + delta[axis] * panFriction;\n\n        // move main scroll or start panning\n        if(_options.allowPanToNext || _currZoomLevel === self.currItem.initialZoomLevel) {\n\n\n          if(!_currZoomElementStyle) {\n\n            newMainScrollPos = newMainScrollPosition;\n\n          } else if(_direction === 'h' && axis === 'x' && !_zoomStarted ) {\n\n            if(dir) {\n              if(newOffset > _currPanBounds.min[axis]) {\n                panFriction = _options.panEndFriction;\n                overDiff = _currPanBounds.min[axis] - newOffset;\n                startOverDiff = _currPanBounds.min[axis] - _startPanOffset[axis];\n              }\n\n              // drag right\n              if( (startOverDiff <= 0 || mainScrollDiff < 0) && _getNumItems() > 1 ) {\n                newMainScrollPos = newMainScrollPosition;\n                if(mainScrollDiff < 0 && newMainScrollPosition > _startMainScrollPos.x) {\n                  newMainScrollPos = _startMainScrollPos.x;\n                }\n              } else {\n                if(_currPanBounds.min.x !== _currPanBounds.max.x) {\n                  newPanPos = newOffset;\n                }\n\n              }\n\n            } else {\n\n              if(newOffset < _currPanBounds.max[axis] ) {\n                panFriction =_options.panEndFriction;\n                overDiff = newOffset - _currPanBounds.max[axis];\n                startOverDiff = _startPanOffset[axis] - _currPanBounds.max[axis];\n              }\n\n              if( (startOverDiff <= 0 || mainScrollDiff > 0) && _getNumItems() > 1 ) {\n                newMainScrollPos = newMainScrollPosition;\n\n                if(mainScrollDiff > 0 && newMainScrollPosition < _startMainScrollPos.x) {\n                  newMainScrollPos = _startMainScrollPos.x;\n                }\n\n              } else {\n                if(_currPanBounds.min.x !== _currPanBounds.max.x) {\n                  newPanPos = newOffset;\n                }\n              }\n\n            }\n\n\n            //\n          }\n\n          if(axis === 'x') {\n\n            if(newMainScrollPos !== undefined) {\n              _moveMainScroll(newMainScrollPos, true);\n              if(newMainScrollPos === _startMainScrollPos.x) {\n                _mainScrollShifted = false;\n              } else {\n                _mainScrollShifted = true;\n              }\n            }\n\n            if(_currPanBounds.min.x !== _currPanBounds.max.x) {\n              if(newPanPos !== undefined) {\n                _panOffset.x = newPanPos;\n              } else if(!_mainScrollShifted) {\n                _panOffset.x += delta.x * panFriction;\n              }\n            }\n\n            return newMainScrollPos !== undefined;\n          }\n\n        }\n\n        if(!_mainScrollAnimating) {\n\n          if(!_mainScrollShifted) {\n            if(_currZoomLevel > self.currItem.fitRatio) {\n              _panOffset[axis] += delta[axis] * panFriction;\n\n            }\n          }\n\n\n        }\n\n      },\n\n      // Pointerdown/touchstart/mousedown handler\n      _onDragStart = function(e) {\n\n        // Allow dragging only via left mouse button.\n        // As this handler is not added in IE8 - we ignore e.which\n        //\n        // http://www.quirksmode.org/js/events_properties.html\n        // https://developer.mozilla.org/en-US/docs/Web/API/event.button\n        if(e.type === 'mousedown' && e.button > 0  ) {\n          return;\n        }\n\n        if(_initialZoomRunning) {\n          e.preventDefault();\n          return;\n        }\n\n        if(_oldAndroidTouchEndTimeout && e.type === 'mousedown') {\n          return;\n        }\n\n        if(_preventDefaultEventBehaviour(e, true)) {\n          e.preventDefault();\n        }\n\n\n\n        _shout('pointerDown');\n\n        if(_pointerEventEnabled) {\n          var pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n          if(pointerIndex < 0) {\n            pointerIndex = _currPointers.length;\n          }\n          _currPointers[pointerIndex] = {x:e.pageX, y:e.pageY, id: e.pointerId};\n        }\n\n\n\n        var startPointsList = _getTouchPoints(e),\n          numPoints = startPointsList.length;\n\n        _currentPoints = null;\n\n        _stopAllAnimations();\n\n        // init drag\n        if(!_isDragging || numPoints === 1) {\n\n\n\n          _isDragging = _isFirstMove = true;\n          framework.bind(window, _upMoveEvents, self);\n\n          _isZoomingIn =\n            _wasOverInitialZoom =\n              _opacityChanged =\n                _verticalDragInitiated =\n                  _mainScrollShifted =\n                    _moved =\n                      _isMultitouch =\n                        _zoomStarted = false;\n\n          _direction = null;\n\n          _shout('firstTouchStart', startPointsList);\n\n          _equalizePoints(_startPanOffset, _panOffset);\n\n          _currPanDist.x = _currPanDist.y = 0;\n          _equalizePoints(_currPoint, startPointsList[0]);\n          _equalizePoints(_startPoint, _currPoint);\n\n          //_equalizePoints(_startMainScrollPos, _mainScrollPos);\n          _startMainScrollPos.x = _slideSize.x * _currPositionIndex;\n\n          _posPoints = [{\n            x: _currPoint.x,\n            y: _currPoint.y\n          }];\n\n          _gestureCheckSpeedTime = _gestureStartTime = _getCurrentTime();\n\n          //_mainScrollAnimationEnd(true);\n          _calculatePanBounds( _currZoomLevel, true );\n\n          // Start rendering\n          _stopDragUpdateLoop();\n          _dragUpdateLoop();\n\n        }\n\n        // init zoom\n        if(!_isZooming && numPoints > 1 && !_mainScrollAnimating && !_mainScrollShifted) {\n          _startZoomLevel = _currZoomLevel;\n          _zoomStarted = false; // true if zoom changed at least once\n\n          _isZooming = _isMultitouch = true;\n          _currPanDist.y = _currPanDist.x = 0;\n\n          _equalizePoints(_startPanOffset, _panOffset);\n\n          _equalizePoints(p, startPointsList[0]);\n          _equalizePoints(p2, startPointsList[1]);\n\n          _findCenterOfPoints(p, p2, _currCenterPoint);\n\n          _midZoomPoint.x = Math.abs(_currCenterPoint.x) - _panOffset.x;\n          _midZoomPoint.y = Math.abs(_currCenterPoint.y) - _panOffset.y;\n          _currPointsDistance = _startPointsDistance = _calculatePointsDistance(p, p2);\n        }\n\n\n      },\n\n      // Pointermove/touchmove/mousemove handler\n      _onDragMove = function(e) {\n\n        e.preventDefault();\n\n        if(_pointerEventEnabled) {\n          var pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n          if(pointerIndex > -1) {\n            var p = _currPointers[pointerIndex];\n            p.x = e.pageX;\n            p.y = e.pageY;\n          }\n        }\n\n        if(_isDragging) {\n          var touchesList = _getTouchPoints(e);\n          if(!_direction && !_moved && !_isZooming) {\n\n            if(_mainScrollPos.x !== _slideSize.x * _currPositionIndex) {\n              // if main scroll position is shifted – direction is always horizontal\n              _direction = 'h';\n            } else {\n              var diff = Math.abs(touchesList[0].x - _currPoint.x) - Math.abs(touchesList[0].y - _currPoint.y);\n              // check the direction of movement\n              if(Math.abs(diff) >= DIRECTION_CHECK_OFFSET) {\n                _direction = diff > 0 ? 'h' : 'v';\n                _currentPoints = touchesList;\n              }\n            }\n\n          } else {\n            _currentPoints = touchesList;\n          }\n        }\n      },\n      //\n      _renderMovement =  function() {\n\n        if(!_currentPoints) {\n          return;\n        }\n\n        var numPoints = _currentPoints.length;\n\n        if(numPoints === 0) {\n          return;\n        }\n\n        _equalizePoints(p, _currentPoints[0]);\n\n        delta.x = p.x - _currPoint.x;\n        delta.y = p.y - _currPoint.y;\n\n        if(_isZooming && numPoints > 1) {\n          // Handle behaviour for more than 1 point\n\n          _currPoint.x = p.x;\n          _currPoint.y = p.y;\n\n          // check if one of two points changed\n          if( !delta.x && !delta.y && _isEqualPoints(_currentPoints[1], p2) ) {\n            return;\n          }\n\n          _equalizePoints(p2, _currentPoints[1]);\n\n\n          if(!_zoomStarted) {\n            _zoomStarted = true;\n            _shout('zoomGestureStarted');\n          }\n\n          // Distance between two points\n          var pointsDistance = _calculatePointsDistance(p,p2);\n\n          var zoomLevel = _calculateZoomLevel(pointsDistance);\n\n          // slightly over the of initial zoom level\n          if(zoomLevel > self.currItem.initialZoomLevel + self.currItem.initialZoomLevel / 15) {\n            _wasOverInitialZoom = true;\n          }\n\n          // Apply the friction if zoom level is out of the bounds\n          var zoomFriction = 1,\n            minZoomLevel = _getMinZoomLevel(),\n            maxZoomLevel = _getMaxZoomLevel();\n\n          if ( zoomLevel < minZoomLevel ) {\n\n            if(_options.pinchToClose && !_wasOverInitialZoom && _startZoomLevel <= self.currItem.initialZoomLevel) {\n              // fade out background if zooming out\n              var minusDiff = minZoomLevel - zoomLevel;\n              var percent = 1 - minusDiff / (minZoomLevel / 1.2);\n\n              _applyBgOpacity(percent);\n              _shout('onPinchClose', percent);\n              _opacityChanged = true;\n            } else {\n              zoomFriction = (minZoomLevel - zoomLevel) / minZoomLevel;\n              if(zoomFriction > 1) {\n                zoomFriction = 1;\n              }\n              zoomLevel = minZoomLevel - zoomFriction * (minZoomLevel / 3);\n            }\n\n          } else if ( zoomLevel > maxZoomLevel ) {\n            // 1.5 - extra zoom level above the max. E.g. if max is x6, real max 6 + 1.5 = 7.5\n            zoomFriction = (zoomLevel - maxZoomLevel) / ( minZoomLevel * 6 );\n            if(zoomFriction > 1) {\n              zoomFriction = 1;\n            }\n            zoomLevel = maxZoomLevel + zoomFriction * minZoomLevel;\n          }\n\n          if(zoomFriction < 0) {\n            zoomFriction = 0;\n          }\n\n          // distance between touch points after friction is applied\n          _currPointsDistance = pointsDistance;\n\n          // _centerPoint - The point in the middle of two pointers\n          _findCenterOfPoints(p, p2, _centerPoint);\n\n          // paning with two pointers pressed\n          _currPanDist.x += _centerPoint.x - _currCenterPoint.x;\n          _currPanDist.y += _centerPoint.y - _currCenterPoint.y;\n          _equalizePoints(_currCenterPoint, _centerPoint);\n\n          _panOffset.x = _calculatePanOffset('x', zoomLevel);\n          _panOffset.y = _calculatePanOffset('y', zoomLevel);\n\n          _isZoomingIn = zoomLevel > _currZoomLevel;\n          _currZoomLevel = zoomLevel;\n          _applyCurrentZoomPan();\n\n        } else {\n\n          // handle behaviour for one point (dragging or panning)\n\n          if(!_direction) {\n            return;\n          }\n\n          if(_isFirstMove) {\n            _isFirstMove = false;\n\n            // subtract drag distance that was used during the detection direction\n\n            if( Math.abs(delta.x) >= DIRECTION_CHECK_OFFSET) {\n              delta.x -= _currentPoints[0].x - _startPoint.x;\n            }\n\n            if( Math.abs(delta.y) >= DIRECTION_CHECK_OFFSET) {\n              delta.y -= _currentPoints[0].y - _startPoint.y;\n            }\n          }\n\n          _currPoint.x = p.x;\n          _currPoint.y = p.y;\n\n          // do nothing if pointers position hasn't changed\n          if(delta.x === 0 && delta.y === 0) {\n            return;\n          }\n\n          if(_direction === 'v' && _options.closeOnVerticalDrag) {\n            if(!_canPan()) {\n              _currPanDist.y += delta.y;\n              _panOffset.y += delta.y;\n\n              var opacityRatio = _calculateVerticalDragOpacityRatio();\n\n              _verticalDragInitiated = true;\n              _shout('onVerticalDrag', opacityRatio);\n\n              _applyBgOpacity(opacityRatio);\n              _applyCurrentZoomPan();\n              return ;\n            }\n          }\n\n          _pushPosPoint(_getCurrentTime(), p.x, p.y);\n\n          _moved = true;\n          _currPanBounds = self.currItem.bounds;\n\n          var mainScrollChanged = _panOrMoveMainScroll('x', delta);\n          if(!mainScrollChanged) {\n            _panOrMoveMainScroll('y', delta);\n\n            _roundPoint(_panOffset);\n            _applyCurrentZoomPan();\n          }\n\n        }\n\n      },\n\n      // Pointerup/pointercancel/touchend/touchcancel/mouseup event handler\n      _onDragRelease = function(e) {\n\n        if(_features.isOldAndroid ) {\n\n          if(_oldAndroidTouchEndTimeout && e.type === 'mouseup') {\n            return;\n          }\n\n          // on Android (v4.1, 4.2, 4.3 & possibly older)\n          // ghost mousedown/up event isn't preventable via e.preventDefault,\n          // which causes fake mousedown event\n          // so we block mousedown/up for 600ms\n          if( e.type.indexOf('touch') > -1 ) {\n            clearTimeout(_oldAndroidTouchEndTimeout);\n            _oldAndroidTouchEndTimeout = setTimeout(function() {\n              _oldAndroidTouchEndTimeout = 0;\n            }, 600);\n          }\n\n        }\n\n        _shout('pointerUp');\n\n        if(_preventDefaultEventBehaviour(e, false)) {\n          e.preventDefault();\n        }\n\n        var releasePoint;\n\n        if(_pointerEventEnabled) {\n          var pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\n          if(pointerIndex > -1) {\n            releasePoint = _currPointers.splice(pointerIndex, 1)[0];\n\n            if(navigator.pointerEnabled) {\n              releasePoint.type = e.pointerType || 'mouse';\n            } else {\n              var MSPOINTER_TYPES = {\n                4: 'mouse', // event.MSPOINTER_TYPE_MOUSE\n                2: 'touch', // event.MSPOINTER_TYPE_TOUCH\n                3: 'pen' // event.MSPOINTER_TYPE_PEN\n              };\n              releasePoint.type = MSPOINTER_TYPES[e.pointerType];\n\n              if(!releasePoint.type) {\n                releasePoint.type = e.pointerType || 'mouse';\n              }\n            }\n\n          }\n        }\n\n        var touchList = _getTouchPoints(e),\n          gestureType,\n          numPoints = touchList.length;\n\n        if(e.type === 'mouseup') {\n          numPoints = 0;\n        }\n\n        // Do nothing if there were 3 touch points or more\n        if(numPoints === 2) {\n          _currentPoints = null;\n          return true;\n        }\n\n        // if second pointer released\n        if(numPoints === 1) {\n          _equalizePoints(_startPoint, touchList[0]);\n        }\n\n\n        // pointer hasn't moved, send \"tap release\" point\n        if(numPoints === 0 && !_direction && !_mainScrollAnimating) {\n          if(!releasePoint) {\n            if(e.type === 'mouseup') {\n              releasePoint = {x: e.pageX, y: e.pageY, type:'mouse'};\n            } else if(e.changedTouches && e.changedTouches[0]) {\n              releasePoint = {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY, type:'touch'};\n            }\n          }\n\n          _shout('touchRelease', e, releasePoint);\n        }\n\n        // Difference in time between releasing of two last touch points (zoom gesture)\n        var releaseTimeDiff = -1;\n\n        // Gesture completed, no pointers left\n        if(numPoints === 0) {\n          _isDragging = false;\n          framework.unbind(window, _upMoveEvents, self);\n\n          _stopDragUpdateLoop();\n\n          if(_isZooming) {\n            // Two points released at the same time\n            releaseTimeDiff = 0;\n          } else if(_lastReleaseTime !== -1) {\n            releaseTimeDiff = _getCurrentTime() - _lastReleaseTime;\n          }\n        }\n        _lastReleaseTime = numPoints === 1 ? _getCurrentTime() : -1;\n\n        if(releaseTimeDiff !== -1 && releaseTimeDiff < 150) {\n          gestureType = 'zoom';\n        } else {\n          gestureType = 'swipe';\n        }\n\n        if(_isZooming && numPoints < 2) {\n          _isZooming = false;\n\n          // Only second point released\n          if(numPoints === 1) {\n            gestureType = 'zoomPointerUp';\n          }\n          _shout('zoomGestureEnded');\n        }\n\n        _currentPoints = null;\n        if(!_moved && !_zoomStarted && !_mainScrollAnimating && !_verticalDragInitiated) {\n          // nothing to animate\n          return;\n        }\n\n        _stopAllAnimations();\n\n\n        if(!_releaseAnimData) {\n          _releaseAnimData = _initDragReleaseAnimationData();\n        }\n\n        _releaseAnimData.calculateSwipeSpeed('x');\n\n\n        if(_verticalDragInitiated) {\n\n          var opacityRatio = _calculateVerticalDragOpacityRatio();\n\n          if(opacityRatio < _options.verticalDragRange) {\n            self.close();\n          } else {\n            var initalPanY = _panOffset.y,\n              initialBgOpacity = _bgOpacity;\n\n            _animateProp('verticalDrag', 0, 1, 300, framework.easing.cubic.out, function(now) {\n\n              _panOffset.y = (self.currItem.initialPosition.y - initalPanY) * now + initalPanY;\n\n              _applyBgOpacity(  (1 - initialBgOpacity) * now + initialBgOpacity );\n              _applyCurrentZoomPan();\n            });\n\n            _shout('onVerticalDrag', 1);\n          }\n\n          return;\n        }\n\n\n        // main scroll\n        if(  (_mainScrollShifted || _mainScrollAnimating) && numPoints === 0) {\n          var itemChanged = _finishSwipeMainScrollGesture(gestureType, _releaseAnimData);\n          if(itemChanged) {\n            return;\n          }\n          gestureType = 'zoomPointerUp';\n        }\n\n        // prevent zoom/pan animation when main scroll animation runs\n        if(_mainScrollAnimating) {\n          return;\n        }\n\n        // Complete simple zoom gesture (reset zoom level if it's out of the bounds)\n        if(gestureType !== 'swipe') {\n          _completeZoomGesture();\n          return;\n        }\n\n        // Complete pan gesture if main scroll is not shifted, and it's possible to pan current image\n        if(!_mainScrollShifted && _currZoomLevel > self.currItem.fitRatio) {\n          _completePanGesture(_releaseAnimData);\n        }\n      },\n\n\n      // Returns object with data about gesture\n      // It's created only once and then reused\n      _initDragReleaseAnimationData  = function() {\n        // temp local vars\n        var lastFlickDuration,\n          tempReleasePos;\n\n        // s = this\n        var s = {\n          lastFlickOffset: {},\n          lastFlickDist: {},\n          lastFlickSpeed: {},\n          slowDownRatio:  {},\n          slowDownRatioReverse:  {},\n          speedDecelerationRatio:  {},\n          speedDecelerationRatioAbs:  {},\n          distanceOffset:  {},\n          backAnimDestination: {},\n          backAnimStarted: {},\n          calculateSwipeSpeed: function(axis) {\n\n\n            if( _posPoints.length > 1) {\n              lastFlickDuration = _getCurrentTime() - _gestureCheckSpeedTime + 50;\n              tempReleasePos = _posPoints[_posPoints.length-2][axis];\n            } else {\n              lastFlickDuration = _getCurrentTime() - _gestureStartTime; // total gesture duration\n              tempReleasePos = _startPoint[axis];\n            }\n            s.lastFlickOffset[axis] = _currPoint[axis] - tempReleasePos;\n            s.lastFlickDist[axis] = Math.abs(s.lastFlickOffset[axis]);\n            if(s.lastFlickDist[axis] > 20) {\n              s.lastFlickSpeed[axis] = s.lastFlickOffset[axis] / lastFlickDuration;\n            } else {\n              s.lastFlickSpeed[axis] = 0;\n            }\n            if( Math.abs(s.lastFlickSpeed[axis]) < 0.1 ) {\n              s.lastFlickSpeed[axis] = 0;\n            }\n\n            s.slowDownRatio[axis] = 0.95;\n            s.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n            s.speedDecelerationRatio[axis] = 1;\n          },\n\n          calculateOverBoundsAnimOffset: function(axis, speed) {\n            if(!s.backAnimStarted[axis]) {\n\n              if(_panOffset[axis] > _currPanBounds.min[axis]) {\n                s.backAnimDestination[axis] = _currPanBounds.min[axis];\n\n              } else if(_panOffset[axis] < _currPanBounds.max[axis]) {\n                s.backAnimDestination[axis] = _currPanBounds.max[axis];\n              }\n\n              if(s.backAnimDestination[axis] !== undefined) {\n                s.slowDownRatio[axis] = 0.7;\n                s.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n                if(s.speedDecelerationRatioAbs[axis] < 0.05) {\n\n                  s.lastFlickSpeed[axis] = 0;\n                  s.backAnimStarted[axis] = true;\n\n                  _animateProp('bounceZoomPan'+axis,_panOffset[axis],\n                    s.backAnimDestination[axis],\n                    speed || 300,\n                    framework.easing.sine.out,\n                    function(pos) {\n                      _panOffset[axis] = pos;\n                      _applyCurrentZoomPan();\n                    }\n                  );\n\n                }\n              }\n            }\n          },\n\n          // Reduces the speed by slowDownRatio (per 10ms)\n          calculateAnimOffset: function(axis) {\n            if(!s.backAnimStarted[axis]) {\n              s.speedDecelerationRatio[axis] = s.speedDecelerationRatio[axis] * (s.slowDownRatio[axis] +\n                s.slowDownRatioReverse[axis] -\n                s.slowDownRatioReverse[axis] * s.timeDiff / 10);\n\n              s.speedDecelerationRatioAbs[axis] = Math.abs(s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis]);\n              s.distanceOffset[axis] = s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis] * s.timeDiff;\n              _panOffset[axis] += s.distanceOffset[axis];\n\n            }\n          },\n\n          panAnimLoop: function() {\n            if ( _animations.zoomPan ) {\n              _animations.zoomPan.raf = _requestAF(s.panAnimLoop);\n\n              s.now = _getCurrentTime();\n              s.timeDiff = s.now - s.lastNow;\n              s.lastNow = s.now;\n\n              s.calculateAnimOffset('x');\n              s.calculateAnimOffset('y');\n\n              _applyCurrentZoomPan();\n\n              s.calculateOverBoundsAnimOffset('x');\n              s.calculateOverBoundsAnimOffset('y');\n\n\n              if (s.speedDecelerationRatioAbs.x < 0.05 && s.speedDecelerationRatioAbs.y < 0.05) {\n\n                // round pan position\n                _panOffset.x = Math.round(_panOffset.x);\n                _panOffset.y = Math.round(_panOffset.y);\n                _applyCurrentZoomPan();\n\n                _stopAnimation('zoomPan');\n                return;\n              }\n            }\n\n          }\n        };\n        return s;\n      },\n\n      _completePanGesture = function(animData) {\n        // calculate swipe speed for Y axis (paanning)\n        animData.calculateSwipeSpeed('y');\n\n        _currPanBounds = self.currItem.bounds;\n\n        animData.backAnimDestination = {};\n        animData.backAnimStarted = {};\n\n        // Avoid acceleration animation if speed is too low\n        if(Math.abs(animData.lastFlickSpeed.x) <= 0.05 && Math.abs(animData.lastFlickSpeed.y) <= 0.05 ) {\n          animData.speedDecelerationRatioAbs.x = animData.speedDecelerationRatioAbs.y = 0;\n\n          // Run pan drag release animation. E.g. if you drag image and release finger without momentum.\n          animData.calculateOverBoundsAnimOffset('x');\n          animData.calculateOverBoundsAnimOffset('y');\n          return true;\n        }\n\n        // Animation loop that controls the acceleration after pan gesture ends\n        _registerStartAnimation('zoomPan');\n        animData.lastNow = _getCurrentTime();\n        animData.panAnimLoop();\n      },\n\n\n      _finishSwipeMainScrollGesture = function(gestureType, _releaseAnimData) {\n        var itemChanged;\n        if(!_mainScrollAnimating) {\n          _currZoomedItemIndex = _currentItemIndex;\n        }\n\n\n\n        var itemsDiff;\n\n        if(gestureType === 'swipe') {\n          var totalShiftDist = _currPoint.x - _startPoint.x,\n            isFastLastFlick = _releaseAnimData.lastFlickDist.x < 10;\n\n          // if container is shifted for more than MIN_SWIPE_DISTANCE,\n          // and last flick gesture was in right direction\n          if(totalShiftDist > MIN_SWIPE_DISTANCE &&\n            (isFastLastFlick || _releaseAnimData.lastFlickOffset.x > 20) ) {\n            // go to prev item\n            itemsDiff = -1;\n          } else if(totalShiftDist < -MIN_SWIPE_DISTANCE &&\n            (isFastLastFlick || _releaseAnimData.lastFlickOffset.x < -20) ) {\n            // go to next item\n            itemsDiff = 1;\n          }\n        }\n\n        var nextCircle;\n\n        if(itemsDiff) {\n\n          _currentItemIndex += itemsDiff;\n\n          if(_currentItemIndex < 0) {\n            _currentItemIndex = _options.loop ? _getNumItems()-1 : 0;\n            nextCircle = true;\n          } else if(_currentItemIndex >= _getNumItems()) {\n            _currentItemIndex = _options.loop ? 0 : _getNumItems()-1;\n            nextCircle = true;\n          }\n\n          if(!nextCircle || _options.loop) {\n            _indexDiff += itemsDiff;\n            _currPositionIndex -= itemsDiff;\n            itemChanged = true;\n          }\n\n\n\n        }\n\n        var animateToX = _slideSize.x * _currPositionIndex;\n        var animateToDist = Math.abs( animateToX - _mainScrollPos.x );\n        var finishAnimDuration;\n\n\n        if(!itemChanged && animateToX > _mainScrollPos.x !== _releaseAnimData.lastFlickSpeed.x > 0) {\n          // \"return to current\" duration, e.g. when dragging from slide 0 to -1\n          finishAnimDuration = 333;\n        } else {\n          finishAnimDuration = Math.abs(_releaseAnimData.lastFlickSpeed.x) > 0 ?\n            animateToDist / Math.abs(_releaseAnimData.lastFlickSpeed.x) :\n            333;\n\n          finishAnimDuration = Math.min(finishAnimDuration, 400);\n          finishAnimDuration = Math.max(finishAnimDuration, 250);\n        }\n\n        if(_currZoomedItemIndex === _currentItemIndex) {\n          itemChanged = false;\n        }\n\n        _mainScrollAnimating = true;\n\n        _shout('mainScrollAnimStart');\n\n        _animateProp('mainScroll', _mainScrollPos.x, animateToX, finishAnimDuration, framework.easing.cubic.out,\n          _moveMainScroll,\n          function() {\n            _stopAllAnimations();\n            _mainScrollAnimating = false;\n            _currZoomedItemIndex = -1;\n\n            if(itemChanged || _currZoomedItemIndex !== _currentItemIndex) {\n              self.updateCurrItem();\n            }\n\n            _shout('mainScrollAnimComplete');\n          }\n        );\n\n        if(itemChanged) {\n          self.updateCurrItem(true);\n        }\n\n        return itemChanged;\n      },\n\n      _calculateZoomLevel = function(touchesDistance) {\n        return  1 / _startPointsDistance * touchesDistance * _startZoomLevel;\n      },\n\n      // Resets zoom if it's out of bounds\n      _completeZoomGesture = function() {\n        var destZoomLevel = _currZoomLevel,\n          minZoomLevel = _getMinZoomLevel(),\n          maxZoomLevel = _getMaxZoomLevel();\n\n        if ( _currZoomLevel < minZoomLevel ) {\n          destZoomLevel = minZoomLevel;\n        } else if ( _currZoomLevel > maxZoomLevel ) {\n          destZoomLevel = maxZoomLevel;\n        }\n\n        var destOpacity = 1,\n          onUpdate,\n          initialOpacity = _bgOpacity;\n\n        if(_opacityChanged && !_isZoomingIn && !_wasOverInitialZoom && _currZoomLevel < minZoomLevel) {\n          //_closedByScroll = true;\n          self.close();\n          return true;\n        }\n\n        if(_opacityChanged) {\n          onUpdate = function(now) {\n            _applyBgOpacity(  (destOpacity - initialOpacity) * now + initialOpacity );\n          };\n        }\n\n        self.zoomTo(destZoomLevel, 0, 200,  framework.easing.cubic.out, onUpdate);\n        return true;\n      };\n\n\n    _registerModule('Gestures', {\n      publicMethods: {\n\n        initGestures: function() {\n\n          // helper function that builds touch/pointer/mouse events\n          var addEventNames = function(pref, down, move, up, cancel) {\n            _dragStartEvent = pref + down;\n            _dragMoveEvent = pref + move;\n            _dragEndEvent = pref + up;\n            if(cancel) {\n              _dragCancelEvent = pref + cancel;\n            } else {\n              _dragCancelEvent = '';\n            }\n          };\n\n          _pointerEventEnabled = _features.pointerEvent;\n          if(_pointerEventEnabled && _features.touch) {\n            // we don't need touch events, if browser supports pointer events\n            _features.touch = false;\n          }\n\n          if(_pointerEventEnabled) {\n            if(navigator.pointerEnabled) {\n              addEventNames('pointer', 'down', 'move', 'up', 'cancel');\n            } else {\n              // IE10 pointer events are case-sensitive\n              addEventNames('MSPointer', 'Down', 'Move', 'Up', 'Cancel');\n            }\n          } else if(_features.touch) {\n            addEventNames('touch', 'start', 'move', 'end', 'cancel');\n            _likelyTouchDevice = true;\n          } else {\n            addEventNames('mouse', 'down', 'move', 'up');\n          }\n\n          _upMoveEvents = _dragMoveEvent + ' ' + _dragEndEvent  + ' ' +  _dragCancelEvent;\n          _downEvents = _dragStartEvent;\n\n          if(_pointerEventEnabled && !_likelyTouchDevice) {\n            _likelyTouchDevice = (navigator.maxTouchPoints > 1) || (navigator.msMaxTouchPoints > 1);\n          }\n          // make variable public\n          self.likelyTouchDevice = _likelyTouchDevice;\n\n          _globalEventHandlers[_dragStartEvent] = _onDragStart;\n          _globalEventHandlers[_dragMoveEvent] = _onDragMove;\n          _globalEventHandlers[_dragEndEvent] = _onDragRelease; // the Kraken\n\n          if(_dragCancelEvent) {\n            _globalEventHandlers[_dragCancelEvent] = _globalEventHandlers[_dragEndEvent];\n          }\n\n          // Bind mouse events on device with detected hardware touch support, in case it supports multiple types of input.\n          if(_features.touch) {\n            _downEvents += ' mousedown';\n            _upMoveEvents += ' mousemove mouseup';\n            _globalEventHandlers.mousedown = _globalEventHandlers[_dragStartEvent];\n            _globalEventHandlers.mousemove = _globalEventHandlers[_dragMoveEvent];\n            _globalEventHandlers.mouseup = _globalEventHandlers[_dragEndEvent];\n          }\n\n          if(!_likelyTouchDevice) {\n            // don't allow pan to next slide from zoomed state on Desktop\n            _options.allowPanToNext = false;\n          }\n        }\n\n      }\n    });\n\n\n    /*>>gestures*/\n\n    /*>>show-hide-transition*/\n    /**\n     * show-hide-transition.js:\n     *\n     * Manages initial opening or closing transition.\n     *\n     * If you're not planning to use transition for gallery at all,\n     * you may set options hideAnimationDuration and showAnimationDuration to 0,\n     * and just delete startAnimation function.\n     *\n     */\n\n\n    var _showOrHideTimeout,\n      _showOrHide = function(item, img, out, completeFn) {\n\n        if(_showOrHideTimeout) {\n          clearTimeout(_showOrHideTimeout);\n        }\n\n        _initialZoomRunning = true;\n        _initialContentSet = true;\n\n        // dimensions of small thumbnail {x:,y:,w:}.\n        // Height is optional, as calculated based on large image.\n        var thumbBounds;\n        if(item.initialLayout) {\n          thumbBounds = item.initialLayout;\n          item.initialLayout = null;\n        } else {\n          thumbBounds = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n        }\n\n        var duration = out ? _options.hideAnimationDuration : _options.showAnimationDuration;\n\n        var onComplete = function() {\n          _stopAnimation('initialZoom');\n          if(!out) {\n            _applyBgOpacity(1);\n            if(img) {\n              img.style.display = 'block';\n            }\n            framework.addClass(template, 'pswp--animated-in');\n            _shout('initialZoom' + (out ? 'OutEnd' : 'InEnd'));\n          } else {\n            self.template.removeAttribute('style');\n            self.bg.removeAttribute('style');\n          }\n\n          if(completeFn) {\n            completeFn();\n          }\n          _initialZoomRunning = false;\n        };\n\n        // if bounds aren't provided, just open gallery without animation\n        if(!duration || !thumbBounds || thumbBounds.x === undefined) {\n\n          _shout('initialZoom' + (out ? 'Out' : 'In') );\n\n          _currZoomLevel = item.initialZoomLevel;\n          _equalizePoints(_panOffset,  item.initialPosition );\n          _applyCurrentZoomPan();\n\n          template.style.opacity = out ? 0 : 1;\n          _applyBgOpacity(1);\n\n          if(duration) {\n            setTimeout(function() {\n              onComplete();\n            }, duration);\n          } else {\n            onComplete();\n          }\n\n          return;\n        }\n\n        var startAnimation = function() {\n          var closeWithRaf = _closedByScroll,\n            fadeEverything = !self.currItem.src || self.currItem.loadError || _options.showHideOpacity;\n\n          // apply hw-acceleration to image\n          if(item.miniImg) {\n            item.miniImg.style.webkitBackfaceVisibility = 'hidden';\n          }\n\n          if(!out) {\n            _currZoomLevel = thumbBounds.w / item.w;\n            _panOffset.x = thumbBounds.x;\n            _panOffset.y = thumbBounds.y - _initalWindowScrollY;\n\n            self[fadeEverything ? 'template' : 'bg'].style.opacity = 0.001;\n            _applyCurrentZoomPan();\n          }\n\n          _registerStartAnimation('initialZoom');\n\n          if(out && !closeWithRaf) {\n            framework.removeClass(template, 'pswp--animated-in');\n          }\n\n          if(fadeEverything) {\n            if(out) {\n              framework[ (closeWithRaf ? 'remove' : 'add') + 'Class' ](template, 'pswp--animate_opacity');\n            } else {\n              setTimeout(function() {\n                framework.addClass(template, 'pswp--animate_opacity');\n              }, 30);\n            }\n          }\n\n          _showOrHideTimeout = setTimeout(function() {\n\n            _shout('initialZoom' + (out ? 'Out' : 'In') );\n\n\n            if(!out) {\n\n              // \"in\" animation always uses CSS transitions (instead of rAF).\n              // CSS transition work faster here,\n              // as developer may also want to animate other things,\n              // like ui on top of sliding area, which can be animated just via CSS\n\n              _currZoomLevel = item.initialZoomLevel;\n              _equalizePoints(_panOffset,  item.initialPosition );\n              _applyCurrentZoomPan();\n              _applyBgOpacity(1);\n\n              if(fadeEverything) {\n                template.style.opacity = 1;\n              } else {\n                _applyBgOpacity(1);\n              }\n\n              _showOrHideTimeout = setTimeout(onComplete, duration + 20);\n            } else {\n\n              // \"out\" animation uses rAF only when PhotoSwipe is closed by browser scroll, to recalculate position\n              var destZoomLevel = thumbBounds.w / item.w,\n                initialPanOffset = {\n                  x: _panOffset.x,\n                  y: _panOffset.y\n                },\n                initialZoomLevel = _currZoomLevel,\n                initalBgOpacity = _bgOpacity,\n                onUpdate = function(now) {\n\n                  if(now === 1) {\n                    _currZoomLevel = destZoomLevel;\n                    _panOffset.x = thumbBounds.x;\n                    _panOffset.y = thumbBounds.y  - _currentWindowScrollY;\n                  } else {\n                    _currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n                    _panOffset.x = (thumbBounds.x - initialPanOffset.x) * now + initialPanOffset.x;\n                    _panOffset.y = (thumbBounds.y - _currentWindowScrollY - initialPanOffset.y) * now + initialPanOffset.y;\n                  }\n\n                  _applyCurrentZoomPan();\n                  if(fadeEverything) {\n                    template.style.opacity = 1 - now;\n                  } else {\n                    _applyBgOpacity( initalBgOpacity - now * initalBgOpacity );\n                  }\n                };\n\n              if(closeWithRaf) {\n                _animateProp('initialZoom', 0, 1, duration, framework.easing.cubic.out, onUpdate, onComplete);\n              } else {\n                onUpdate(1);\n                _showOrHideTimeout = setTimeout(onComplete, duration + 20);\n              }\n            }\n\n          }, out ? 25 : 90); // Main purpose of this delay is to give browser time to paint and\n          // create composite layers of PhotoSwipe UI parts (background, controls, caption, arrows).\n          // Which avoids lag at the beginning of scale transition.\n        };\n        startAnimation();\n\n\n      };\n\n    /*>>show-hide-transition*/\n\n    /*>>items-controller*/\n    /**\n     *\n     * Controller manages gallery items, their dimensions, and their content.\n     *\n     */\n\n    var _items,\n      _tempPanAreaSize = {},\n      _imagesToAppendPool = [],\n      _initialContentSet,\n      _initialZoomRunning,\n      _controllerDefaultOptions = {\n        index: 0,\n        errorMsg: '<div class=\"pswp__error-msg\"><a href=\"%url%\" target=\"_blank\">The image</a> could not be loaded.</div>',\n        forceProgressiveLoading: false, // TODO\n        preload: [1,1],\n        getNumItemsFn: function() {\n          return _items.length;\n        }\n      };\n\n\n    var _getItemAt,\n      _getNumItems,\n      _initialIsLoop,\n      _getZeroBounds = function() {\n        return {\n          center:{x:0,y:0},\n          max:{x:0,y:0},\n          min:{x:0,y:0}\n        };\n      },\n      _calculateSingleItemPanBounds = function(item, realPanElementW, realPanElementH ) {\n        var bounds = item.bounds;\n\n        // position of element when it's centered\n        bounds.center.x = Math.round((_tempPanAreaSize.x - realPanElementW) / 2);\n        bounds.center.y = Math.round((_tempPanAreaSize.y - realPanElementH) / 2) + item.vGap.top;\n\n        // maximum pan position\n        bounds.max.x = (realPanElementW > _tempPanAreaSize.x) ?\n          Math.round(_tempPanAreaSize.x - realPanElementW) :\n          bounds.center.x;\n\n        bounds.max.y = (realPanElementH > _tempPanAreaSize.y) ?\n          Math.round(_tempPanAreaSize.y - realPanElementH) + item.vGap.top :\n          bounds.center.y;\n\n        // minimum pan position\n        bounds.min.x = (realPanElementW > _tempPanAreaSize.x) ? 0 : bounds.center.x;\n        bounds.min.y = (realPanElementH > _tempPanAreaSize.y) ? item.vGap.top : bounds.center.y;\n      },\n      _calculateItemSize = function(item, viewportSize, zoomLevel) {\n\n        if (item.src && !item.loadError) {\n          var isInitial = !zoomLevel;\n\n          if(isInitial) {\n            if(!item.vGap) {\n              item.vGap = {top:0,bottom:0};\n            }\n            // allows overriding vertical margin for individual items\n            _shout('parseVerticalMargin', item);\n          }\n\n\n          _tempPanAreaSize.x = viewportSize.x;\n          _tempPanAreaSize.y = viewportSize.y - item.vGap.top - item.vGap.bottom;\n\n          if (isInitial) {\n            var hRatio = _tempPanAreaSize.x / item.w;\n            var vRatio = _tempPanAreaSize.y / item.h;\n\n            item.fitRatio = hRatio < vRatio ? hRatio : vRatio;\n            //item.fillRatio = hRatio > vRatio ? hRatio : vRatio;\n\n            var scaleMode = _options.scaleMode;\n\n            if (scaleMode === 'orig') {\n              zoomLevel = 1;\n            } else if (scaleMode === 'fit') {\n              zoomLevel = item.fitRatio;\n            }\n\n            if (zoomLevel > 1) {\n              zoomLevel = 1;\n            }\n\n            item.initialZoomLevel = zoomLevel;\n\n            if(!item.bounds) {\n              // reuse bounds object\n              item.bounds = _getZeroBounds();\n            }\n          }\n\n          if(!zoomLevel) {\n            return;\n          }\n\n          _calculateSingleItemPanBounds(item, item.w * zoomLevel, item.h * zoomLevel);\n\n          if (isInitial && zoomLevel === item.initialZoomLevel) {\n            item.initialPosition = item.bounds.center;\n          }\n\n          return item.bounds;\n        } else {\n          item.w = item.h = 0;\n          item.initialZoomLevel = item.fitRatio = 1;\n          item.bounds = _getZeroBounds();\n          item.initialPosition = item.bounds.center;\n\n          // if it's not image, we return zero bounds (content is not zoomable)\n          return item.bounds;\n        }\n\n      },\n\n\n\n\n      _appendImage = function(index, item, baseDiv, img, preventAnimation, keepPlaceholder) {\n\n\n        if(item.loadError) {\n          return;\n        }\n\n        if(img) {\n\n          item.imageAppended = true;\n          _setImageSize(item, img, (item === self.currItem && _renderMaxResolution) );\n\n          baseDiv.appendChild(img);\n\n          if(keepPlaceholder) {\n            setTimeout(function() {\n              if(item && item.loaded && item.placeholder) {\n                item.placeholder.style.display = 'none';\n                item.placeholder = null;\n              }\n            }, 500);\n          }\n        }\n      },\n\n\n\n      _preloadImage = function(item) {\n        item.loading = true;\n        item.loaded = false;\n        var img = item.img = framework.createEl('pswp__img', 'img');\n        var onComplete = function() {\n          item.loading = false;\n          item.loaded = true;\n\n          if(item.loadComplete) {\n            item.loadComplete(item);\n          } else {\n            item.img = null; // no need to store image object\n          }\n          img.onload = img.onerror = null;\n          img = null;\n        };\n        img.onload = onComplete;\n        img.onerror = function() {\n          item.loadError = true;\n          onComplete();\n        };\n\n        img.src = item.src;// + '?a=' + Math.random();\n\n        return img;\n      },\n      _checkForError = function(item, cleanUp) {\n        if(item.src && item.loadError && item.container) {\n\n          if(cleanUp) {\n            item.container.innerHTML = '';\n          }\n\n          item.container.innerHTML = _options.errorMsg.replace('%url%',  item.src );\n          return true;\n\n        }\n      },\n      _setImageSize = function(item, img, maxRes) {\n        if(!item.src) {\n          return;\n        }\n\n        if(!img) {\n          img = item.container.lastChild;\n        }\n\n        var w = maxRes ? item.w : Math.round(item.w * item.fitRatio),\n          h = maxRes ? item.h : Math.round(item.h * item.fitRatio);\n\n        if(item.placeholder && !item.loaded) {\n          item.placeholder.style.width = w + 'px';\n          item.placeholder.style.height = h + 'px';\n        }\n\n        img.style.width = w + 'px';\n        img.style.height = h + 'px';\n      },\n      _appendImagesPool = function() {\n\n        if(_imagesToAppendPool.length) {\n          var poolItem;\n\n          for(var i = 0; i < _imagesToAppendPool.length; i++) {\n            poolItem = _imagesToAppendPool[i];\n            if( poolItem.holder.index === poolItem.index ) {\n              _appendImage(poolItem.index, poolItem.item, poolItem.baseDiv, poolItem.img, false, poolItem.clearPlaceholder);\n            }\n          }\n          _imagesToAppendPool = [];\n        }\n      };\n\n\n\n    _registerModule('Controller', {\n\n      publicMethods: {\n\n        lazyLoadItem: function(index) {\n          index = _getLoopedId(index);\n          var item = _getItemAt(index);\n\n          if(!item || ((item.loaded || item.loading) && !_itemsNeedUpdate)) {\n            return;\n          }\n\n          _shout('gettingData', index, item);\n\n          if (!item.src) {\n            return;\n          }\n\n          _preloadImage(item);\n        },\n        initController: function() {\n          framework.extend(_options, _controllerDefaultOptions, true);\n          self.items = _items = items;\n          _getItemAt = self.getItemAt;\n          _getNumItems = _options.getNumItemsFn; //self.getNumItems;\n\n\n\n          _initialIsLoop = _options.loop;\n          if(_getNumItems() < 3) {\n            _options.loop = false; // disable loop if less then 3 items\n          }\n\n          _listen('beforeChange', function(diff) {\n\n            var p = _options.preload,\n              isNext = diff === null ? true : (diff >= 0),\n              preloadBefore = Math.min(p[0], _getNumItems() ),\n              preloadAfter = Math.min(p[1], _getNumItems() ),\n              i;\n\n\n            for(i = 1; i <= (isNext ? preloadAfter : preloadBefore); i++) {\n              self.lazyLoadItem(_currentItemIndex+i);\n            }\n            for(i = 1; i <= (isNext ? preloadBefore : preloadAfter); i++) {\n              self.lazyLoadItem(_currentItemIndex-i);\n            }\n          });\n\n          _listen('initialLayout', function() {\n            self.currItem.initialLayout = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n          });\n\n          _listen('mainScrollAnimComplete', _appendImagesPool);\n          _listen('initialZoomInEnd', _appendImagesPool);\n\n\n\n          _listen('destroy', function() {\n            var item;\n            for(var i = 0; i < _items.length; i++) {\n              item = _items[i];\n              // remove reference to DOM elements, for GC\n              if(item.container) {\n                item.container = null;\n              }\n              if(item.placeholder) {\n                item.placeholder = null;\n              }\n              if(item.img) {\n                item.img = null;\n              }\n              if(item.preloader) {\n                item.preloader = null;\n              }\n              if(item.loadError) {\n                item.loaded = item.loadError = false;\n              }\n            }\n            _imagesToAppendPool = null;\n          });\n        },\n\n\n        getItemAt: function(index) {\n          if (index >= 0) {\n            return _items[index] !== undefined ? _items[index] : false;\n          }\n          return false;\n        },\n\n        allowProgressiveImg: function() {\n          // 1. Progressive image loading isn't working on webkit/blink\n          //    when hw-acceleration (e.g. translateZ) is applied to IMG element.\n          //    That's why in PhotoSwipe parent element gets zoom transform, not image itself.\n          //\n          // 2. Progressive image loading sometimes blinks in webkit/blink when applying animation to parent element.\n          //    That's why it's disabled on touch devices (mainly because of swipe transition)\n          //\n          // 3. Progressive image loading sometimes doesn't work in IE (up to 11).\n\n          // Don't allow progressive loading on non-large touch devices\n          return _options.forceProgressiveLoading || !_likelyTouchDevice || _options.mouseUsed || screen.width > 1200;\n          // 1200 - to eliminate touch devices with large screen (like Chromebook Pixel)\n        },\n\n        setContent: function(holder, index) {\n\n          if(_options.loop) {\n            index = _getLoopedId(index);\n          }\n\n          var prevItem = self.getItemAt(holder.index);\n          if(prevItem) {\n            prevItem.container = null;\n          }\n\n          var item = self.getItemAt(index),\n            img;\n\n          if(!item) {\n            holder.el.innerHTML = '';\n            return;\n          }\n\n          // allow to override data\n          _shout('gettingData', index, item);\n\n          holder.index = index;\n          holder.item = item;\n\n          // base container DIV is created only once for each of 3 holders\n          var baseDiv = item.container = framework.createEl('pswp__zoom-wrap');\n\n\n\n          if(!item.src && item.html) {\n            if(item.html.tagName) {\n              baseDiv.appendChild(item.html);\n            } else {\n              baseDiv.innerHTML = item.html;\n            }\n          }\n\n          _checkForError(item);\n\n          _calculateItemSize(item, _viewportSize);\n\n          if(item.src && !item.loadError && !item.loaded) {\n\n            item.loadComplete = function(item) {\n\n              // gallery closed before image finished loading\n              if(!_isOpen) {\n                return;\n              }\n\n              // check if holder hasn't changed while image was loading\n              if(holder && holder.index === index ) {\n                if( _checkForError(item, true) ) {\n                  item.loadComplete = item.img = null;\n                  _calculateItemSize(item, _viewportSize);\n                  _applyZoomPanToItem(item);\n\n                  if(holder.index === _currentItemIndex) {\n                    // recalculate dimensions\n                    self.updateCurrZoomItem();\n                  }\n                  return;\n                }\n                if( !item.imageAppended ) {\n                  if(_features.transform && (_mainScrollAnimating || _initialZoomRunning) ) {\n                    _imagesToAppendPool.push({\n                      item:item,\n                      baseDiv:baseDiv,\n                      img:item.img,\n                      index:index,\n                      holder:holder,\n                      clearPlaceholder:true\n                    });\n                  } else {\n                    _appendImage(index, item, baseDiv, item.img, _mainScrollAnimating || _initialZoomRunning, true);\n                  }\n                } else {\n                  // remove preloader & mini-img\n                  if(!_initialZoomRunning && item.placeholder) {\n                    item.placeholder.style.display = 'none';\n                    item.placeholder = null;\n                  }\n                }\n              }\n\n              item.loadComplete = null;\n              item.img = null; // no need to store image element after it's added\n\n              _shout('imageLoadComplete', index, item);\n            };\n\n            if(framework.features.transform) {\n\n              var placeholderClassName = 'pswp__img pswp__img--placeholder';\n              placeholderClassName += (item.msrc ? '' : ' pswp__img--placeholder--blank');\n\n              var placeholder = framework.createEl(placeholderClassName, item.msrc ? 'img' : '');\n              if(item.msrc) {\n                placeholder.src = item.msrc;\n              }\n\n              _setImageSize(item, placeholder);\n\n              baseDiv.appendChild(placeholder);\n              item.placeholder = placeholder;\n\n            }\n\n\n\n\n            if(!item.loading) {\n              _preloadImage(item);\n            }\n\n\n            if( self.allowProgressiveImg() ) {\n              // just append image\n              if(!_initialContentSet && _features.transform) {\n                _imagesToAppendPool.push({\n                  item:item,\n                  baseDiv:baseDiv,\n                  img:item.img,\n                  index:index,\n                  holder:holder\n                });\n              } else {\n                _appendImage(index, item, baseDiv, item.img, true, true);\n              }\n            }\n\n          } else if(item.src && !item.loadError) {\n            // image object is created every time, due to bugs of image loading & delay when switching images\n            img = framework.createEl('pswp__img', 'img');\n            img.style.opacity = 1;\n            img.src = item.src;\n            _setImageSize(item, img);\n            _appendImage(index, item, baseDiv, img, true);\n          }\n\n\n          if(!_initialContentSet && index === _currentItemIndex) {\n            _currZoomElementStyle = baseDiv.style;\n            _showOrHide(item, (img ||item.img) );\n          } else {\n            _applyZoomPanToItem(item);\n          }\n\n          holder.el.innerHTML = '';\n          holder.el.appendChild(baseDiv);\n        },\n\n        cleanSlide: function( item ) {\n          if(item.img ) {\n            item.img.onload = item.img.onerror = null;\n          }\n          item.loaded = item.loading = item.img = item.imageAppended = false;\n        }\n\n      }\n    });\n\n    /*>>items-controller*/\n\n    /*>>tap*/\n    /**\n     * tap.js:\n     *\n     * Displatches tap and double-tap events.\n     *\n     */\n\n    var tapTimer,\n      tapReleasePoint = {},\n      _dispatchTapEvent = function(origEvent, releasePoint, pointerType) {\n        var e = document.createEvent( 'CustomEvent' ),\n          eDetail = {\n            origEvent:origEvent,\n            target:origEvent.target,\n            releasePoint: releasePoint,\n            pointerType:pointerType || 'touch'\n          };\n\n        e.initCustomEvent( 'pswpTap', true, true, eDetail );\n        origEvent.target.dispatchEvent(e);\n      };\n\n    _registerModule('Tap', {\n      publicMethods: {\n        initTap: function() {\n          _listen('firstTouchStart', self.onTapStart);\n          _listen('touchRelease', self.onTapRelease);\n          _listen('destroy', function() {\n            tapReleasePoint = {};\n            tapTimer = null;\n          });\n        },\n        onTapStart: function(touchList) {\n          if(touchList.length > 1) {\n            clearTimeout(tapTimer);\n            tapTimer = null;\n          }\n        },\n        onTapRelease: function(e, releasePoint) {\n          if(!releasePoint) {\n            return;\n          }\n\n          if(!_moved && !_isMultitouch && !_numAnimations) {\n            var p0 = releasePoint;\n            if(tapTimer) {\n              clearTimeout(tapTimer);\n              tapTimer = null;\n\n              // Check if taped on the same place\n              if ( _isNearbyPoints(p0, tapReleasePoint) ) {\n                _shout('doubleTap', p0);\n                return;\n              }\n            }\n\n            if(releasePoint.type === 'mouse') {\n              _dispatchTapEvent(e, releasePoint, 'mouse');\n              return;\n            }\n\n            var clickedTagName = e.target.tagName.toUpperCase();\n            // avoid double tap delay on buttons and elements that have class pswp__single-tap\n            if(clickedTagName === 'BUTTON' || framework.hasClass(e.target, 'pswp__single-tap') ) {\n              _dispatchTapEvent(e, releasePoint);\n              return;\n            }\n\n            _equalizePoints(tapReleasePoint, p0);\n\n            tapTimer = setTimeout(function() {\n              _dispatchTapEvent(e, releasePoint);\n              tapTimer = null;\n            }, 300);\n          }\n        }\n      }\n    });\n\n    /*>>tap*/\n\n    /*>>desktop-zoom*/\n    /**\n     *\n     * desktop-zoom.js:\n     *\n     * - Binds mousewheel event for paning zoomed image.\n     * - Manages \"dragging\", \"zoomed-in\", \"zoom-out\" classes.\n     *   (which are used for cursors and zoom icon)\n     * - Adds toggleDesktopZoom function.\n     *\n     */\n\n    var _wheelDelta;\n\n    _registerModule('DesktopZoom', {\n\n      publicMethods: {\n\n        initDesktopZoom: function() {\n\n          if(_oldIE) {\n            // no zoom for old IE (<=8)\n            return;\n          }\n\n          if(_likelyTouchDevice) {\n            // if detected hardware touch support, we wait until mouse is used,\n            // and only then apply desktop-zoom features\n            _listen('mouseUsed', function() {\n              self.setupDesktopZoom();\n            });\n          } else {\n            self.setupDesktopZoom(true);\n          }\n\n        },\n\n        setupDesktopZoom: function(onInit) {\n\n          _wheelDelta = {};\n\n          var events = 'wheel mousewheel DOMMouseScroll';\n\n          _listen('bindEvents', function() {\n            framework.bind(template, events,  self.handleMouseWheel);\n          });\n\n          _listen('unbindEvents', function() {\n            if(_wheelDelta) {\n              framework.unbind(template, events, self.handleMouseWheel);\n            }\n          });\n\n          self.mouseZoomedIn = false;\n\n          var hasDraggingClass,\n            updateZoomable = function() {\n              if(self.mouseZoomedIn) {\n                framework.removeClass(template, 'pswp--zoomed-in');\n                self.mouseZoomedIn = false;\n              }\n              if(_currZoomLevel < 1) {\n                framework.addClass(template, 'pswp--zoom-allowed');\n              } else {\n                framework.removeClass(template, 'pswp--zoom-allowed');\n              }\n              removeDraggingClass();\n            },\n            removeDraggingClass = function() {\n              if(hasDraggingClass) {\n                framework.removeClass(template, 'pswp--dragging');\n                hasDraggingClass = false;\n              }\n            };\n\n          _listen('resize' , updateZoomable);\n          _listen('afterChange' , updateZoomable);\n          _listen('pointerDown', function() {\n            if(self.mouseZoomedIn) {\n              hasDraggingClass = true;\n              framework.addClass(template, 'pswp--dragging');\n            }\n          });\n          _listen('pointerUp', removeDraggingClass);\n\n          if(!onInit) {\n            updateZoomable();\n          }\n\n        },\n\n        handleMouseWheel: function(e) {\n\n          if(_currZoomLevel <= self.currItem.fitRatio) {\n            if( _options.modal ) {\n\n              if (!_options.closeOnScroll || _numAnimations || _isDragging) {\n                e.preventDefault();\n              } else if(_transformKey && Math.abs(e.deltaY) > 2) {\n                // close PhotoSwipe\n                // if browser supports transforms & scroll changed enough\n                _closedByScroll = true;\n                self.close();\n              }\n\n            }\n            return true;\n          }\n\n          // allow just one event to fire\n          e.stopPropagation();\n\n          // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n          _wheelDelta.x = 0;\n\n          if('deltaX' in e) {\n            if(e.deltaMode === 1 /* DOM_DELTA_LINE */) {\n              // 18 - average line height\n              _wheelDelta.x = e.deltaX * 18;\n              _wheelDelta.y = e.deltaY * 18;\n            } else {\n              _wheelDelta.x = e.deltaX;\n              _wheelDelta.y = e.deltaY;\n            }\n          } else if('wheelDelta' in e) {\n            if(e.wheelDeltaX) {\n              _wheelDelta.x = -0.16 * e.wheelDeltaX;\n            }\n            if(e.wheelDeltaY) {\n              _wheelDelta.y = -0.16 * e.wheelDeltaY;\n            } else {\n              _wheelDelta.y = -0.16 * e.wheelDelta;\n            }\n          } else if('detail' in e) {\n            _wheelDelta.y = e.detail;\n          } else {\n            return;\n          }\n\n          _calculatePanBounds(_currZoomLevel, true);\n\n          var newPanX = _panOffset.x - _wheelDelta.x,\n            newPanY = _panOffset.y - _wheelDelta.y;\n\n          // only prevent scrolling in nonmodal mode when not at edges\n          if (_options.modal ||\n            (\n              newPanX <= _currPanBounds.min.x && newPanX >= _currPanBounds.max.x &&\n              newPanY <= _currPanBounds.min.y && newPanY >= _currPanBounds.max.y\n            ) ) {\n            e.preventDefault();\n          }\n\n          // TODO: use rAF instead of mousewheel?\n          self.panTo(newPanX, newPanY);\n        },\n\n        toggleDesktopZoom: function(centerPoint) {\n          centerPoint = centerPoint || {x:_viewportSize.x/2 + _offset.x, y:_viewportSize.y/2 + _offset.y };\n\n          var doubleTapZoomLevel = _options.getDoubleTapZoom(true, self.currItem);\n          var zoomOut = _currZoomLevel === doubleTapZoomLevel;\n\n          self.mouseZoomedIn = !zoomOut;\n\n          self.zoomTo(zoomOut ? self.currItem.initialZoomLevel : doubleTapZoomLevel, centerPoint, 333);\n          framework[ (!zoomOut ? 'add' : 'remove') + 'Class'](template, 'pswp--zoomed-in');\n        }\n\n      }\n    });\n\n\n    /*>>desktop-zoom*/\n\n    /*>>history*/\n    /**\n     *\n     * history.js:\n     *\n     * - Back button to close gallery.\n     *\n     * - Unique URL for each slide: example.com/&pid=1&gid=3\n     *   (where PID is picture index, and GID and gallery index)\n     *\n     * - Switch URL when slides change.\n     *\n     */\n\n\n    var _historyDefaultOptions = {\n      history: true,\n      galleryUID: 1\n    };\n\n    var _historyUpdateTimeout,\n      _hashChangeTimeout,\n      _hashAnimCheckTimeout,\n      _hashChangedByScript,\n      _hashChangedByHistory,\n      _hashReseted,\n      _initialHash,\n      _historyChanged,\n      _closedFromURL,\n      _urlChangedOnce,\n      _windowLoc,\n\n      _supportsPushState,\n\n      _getHash = function() {\n        return _windowLoc.hash.substring(1);\n      },\n      _cleanHistoryTimeouts = function() {\n\n        if(_historyUpdateTimeout) {\n          clearTimeout(_historyUpdateTimeout);\n        }\n\n        if(_hashAnimCheckTimeout) {\n          clearTimeout(_hashAnimCheckTimeout);\n        }\n      },\n\n      // pid - Picture index\n      // gid - Gallery index\n      _parseItemIndexFromURL = function() {\n        var hash = _getHash(),\n          params = {};\n\n        if(hash.length < 5) { // pid=1\n          return params;\n        }\n\n        var i, vars = hash.split('&');\n        for (i = 0; i < vars.length; i++) {\n          if(!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if(pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n        if(_options.galleryPIDs) {\n          // detect custom pid in hash and search for it among the items collection\n          var searchfor = params.pid;\n          params.pid = 0; // if custom pid cannot be found, fallback to the first item\n          for(i = 0; i < _items.length; i++) {\n            if(_items[i].pid === searchfor) {\n              params.pid = i;\n              break;\n            }\n          }\n        } else {\n          params.pid = parseInt(params.pid,10)-1;\n        }\n        if( params.pid < 0 ) {\n          params.pid = 0;\n        }\n        return params;\n      },\n      _updateHash = function() {\n\n        if(_hashAnimCheckTimeout) {\n          clearTimeout(_hashAnimCheckTimeout);\n        }\n\n\n        if(_numAnimations || _isDragging) {\n          // changing browser URL forces layout/paint in some browsers, which causes noticable lag during animation\n          // that's why we update hash only when no animations running\n          _hashAnimCheckTimeout = setTimeout(_updateHash, 500);\n          return;\n        }\n\n        if(_hashChangedByScript) {\n          clearTimeout(_hashChangeTimeout);\n        } else {\n          _hashChangedByScript = true;\n        }\n\n\n        var pid = (_currentItemIndex + 1);\n        var item = _getItemAt( _currentItemIndex );\n        if(item.hasOwnProperty('pid')) {\n          // carry forward any custom pid assigned to the item\n          pid = item.pid;\n        }\n        var newHash = _initialHash + '&'  +  'gid=' + _options.galleryUID + '&' + 'pid=' + pid;\n\n        if(!_historyChanged) {\n          if(_windowLoc.hash.indexOf(newHash) === -1) {\n            _urlChangedOnce = true;\n          }\n          // first time - add new hisory record, then just replace\n        }\n\n        var newURL = _windowLoc.href.split('#')[0] + '#' +  newHash;\n\n        if( _supportsPushState ) {\n\n          if('#' + newHash !== window.location.hash) {\n            history[_historyChanged ? 'replaceState' : 'pushState']('', document.title, newURL);\n          }\n\n        } else {\n          if(_historyChanged) {\n            _windowLoc.replace( newURL );\n          } else {\n            _windowLoc.hash = newHash;\n          }\n        }\n\n\n\n        _historyChanged = true;\n        _hashChangeTimeout = setTimeout(function() {\n          _hashChangedByScript = false;\n        }, 60);\n      };\n\n\n\n\n\n    _registerModule('History', {\n\n\n\n      publicMethods: {\n        initHistory: function() {\n\n          framework.extend(_options, _historyDefaultOptions, true);\n\n          if( !_options.history ) {\n            return;\n          }\n\n\n          _windowLoc = window.location;\n          _urlChangedOnce = false;\n          _closedFromURL = false;\n          _historyChanged = false;\n          _initialHash = _getHash();\n          _supportsPushState = ('pushState' in history);\n\n\n          if(_initialHash.indexOf('gid=') > -1) {\n            _initialHash = _initialHash.split('&gid=')[0];\n            _initialHash = _initialHash.split('?gid=')[0];\n          }\n\n\n          _listen('afterChange', self.updateURL);\n          _listen('unbindEvents', function() {\n            framework.unbind(window, 'hashchange', self.onHashChange);\n          });\n\n\n          var returnToOriginal = function() {\n            _hashReseted = true;\n            if(!_closedFromURL) {\n\n              if(_urlChangedOnce) {\n                history.back();\n              } else {\n\n                if(_initialHash) {\n                  _windowLoc.hash = _initialHash;\n                } else {\n                  if (_supportsPushState) {\n\n                    // remove hash from url without refreshing it or scrolling to top\n                    history.pushState('', document.title,  _windowLoc.pathname + _windowLoc.search );\n                  } else {\n                    _windowLoc.hash = '';\n                  }\n                }\n              }\n\n            }\n\n            _cleanHistoryTimeouts();\n          };\n\n\n          _listen('unbindEvents', function() {\n            if(_closedByScroll) {\n              // if PhotoSwipe is closed by scroll, we go \"back\" before the closing animation starts\n              // this is done to keep the scroll position\n              returnToOriginal();\n            }\n          });\n          _listen('destroy', function() {\n            if(!_hashReseted) {\n              returnToOriginal();\n            }\n          });\n          _listen('firstUpdate', function() {\n            _currentItemIndex = _parseItemIndexFromURL().pid;\n          });\n\n\n\n\n          var index = _initialHash.indexOf('pid=');\n          if(index > -1) {\n            _initialHash = _initialHash.substring(0, index);\n            if(_initialHash.slice(-1) === '&') {\n              _initialHash = _initialHash.slice(0, -1);\n            }\n          }\n\n\n          setTimeout(function() {\n            if(_isOpen) { // hasn't destroyed yet\n              framework.bind(window, 'hashchange', self.onHashChange);\n            }\n          }, 40);\n\n        },\n        onHashChange: function() {\n\n          if(_getHash() === _initialHash) {\n\n            _closedFromURL = true;\n            self.close();\n            return;\n          }\n          if(!_hashChangedByScript) {\n\n            _hashChangedByHistory = true;\n            self.goTo( _parseItemIndexFromURL().pid );\n            _hashChangedByHistory = false;\n          }\n\n        },\n        updateURL: function() {\n\n          // Delay the update of URL, to avoid lag during transition,\n          // and to not to trigger actions like \"refresh page sound\" or \"blinking favicon\" to often\n\n          _cleanHistoryTimeouts();\n\n\n          if(_hashChangedByHistory) {\n            return;\n          }\n\n          if(!_historyChanged) {\n            _updateHash(); // first time\n          } else {\n            _historyUpdateTimeout = setTimeout(_updateHash, 800);\n          }\n        }\n\n      }\n    });\n\n\n    /*>>history*/\n    framework.extend(self, publicMethods); };\n  return PhotoSwipe;\n});\n\n/*! PhotoSwipe Default UI - 4.1.1 - 2015-12-24\n * http://photoswipe.com\n * Copyright (c) 2015 Dmitry Semenov; */\n/**\n *\n * UI on top of main sliding area (caption, arrows, close button, etc.).\n * Built just using public methods/properties of PhotoSwipe.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.PhotoSwipeUI_Default = factory();\n  }\n})(this, function () {\n\n  'use strict';\n\n\n\n  var PhotoSwipeUI_Default =\n    function(pswp, framework) {\n\n      var ui = this;\n      var _overlayUIUpdated = false,\n        _controlsVisible = true,\n        _fullscrenAPI,\n        _controls,\n        _captionContainer,\n        _fakeCaptionContainer,\n        _indexIndicator,\n        _shareButton,\n        _shareModal,\n        _shareModalHidden = true,\n        _initalCloseOnScrollValue,\n        _isIdle,\n        _listen,\n\n        _loadingIndicator,\n        _loadingIndicatorHidden,\n        _loadingIndicatorTimeout,\n\n        _galleryHasOneSlide,\n\n        _options,\n        _defaultUIOptions = {\n          barsSize: {top:44, bottom:'auto'},\n          closeElClasses: ['item', 'caption', 'zoom-wrap', 'ui', 'top-bar'],\n          timeToIdle: 4000,\n          timeToIdleOutside: 1000,\n          loadingIndicatorDelay: 1000, // 2s\n\n          addCaptionHTMLFn: function(item, captionEl /*, isFake */) {\n            if(!item.title) {\n              captionEl.children[0].innerHTML = '';\n              return false;\n            }\n            captionEl.children[0].innerHTML = item.title;\n            return true;\n          },\n\n          closeEl:true,\n          captionEl: true,\n          fullscreenEl: true,\n          zoomEl: true,\n          shareEl: false,\n          counterEl: true,\n          arrowEl: true,\n          preloaderEl: true,\n\n          tapToClose: false,\n          tapToToggleControls: true,\n\n          clickToCloseNonZoomable: true,\n\n          shareButtons: [\n            {id:'facebook', label:'Share on Facebook', url:'https://www.facebook.com/sharer/sharer.php?u={{url}}'},\n            {id:'twitter', label:'Tweet', url:'https://twitter.com/intent/tweet?text={{text}}&url={{url}}'},\n            {id:'pinterest', label:'Pin it', url:'http://www.pinterest.com/pin/create/button/'+\n            '?url={{url}}&media={{image_url}}&description={{text}}'},\n            {id:'download', label:'Download image', url:'{{raw_image_url}}', download:true}\n          ],\n          getImageURLForShare: function( /* shareButtonData */ ) {\n            return pswp.currItem.src || '';\n          },\n          getPageURLForShare: function( /* shareButtonData */ ) {\n            return window.location.href;\n          },\n          getTextForShare: function( /* shareButtonData */ ) {\n            return pswp.currItem.title || '';\n          },\n\n          indexIndicatorSep: ' / ',\n          fitControlsWidth: 1200\n\n        },\n        _blockControlsTap,\n        _blockControlsTapTimeout;\n\n\n\n      var _onControlsTap = function(e) {\n          if(_blockControlsTap) {\n            return true;\n          }\n\n\n          e = e || window.event;\n\n          if(_options.timeToIdle && _options.mouseUsed && !_isIdle) {\n            // reset idle timer\n            _onIdleMouseMove();\n          }\n\n\n          var target = e.target || e.srcElement,\n            uiElement,\n            clickedClass = target.getAttribute('class') || '',\n            found;\n\n          for(var i = 0; i < _uiElements.length; i++) {\n            uiElement = _uiElements[i];\n            if(uiElement.onTap && clickedClass.indexOf('pswp__' + uiElement.name ) > -1 ) {\n              uiElement.onTap();\n              found = true;\n\n            }\n          }\n\n          if(found) {\n            if(e.stopPropagation) {\n              e.stopPropagation();\n            }\n            _blockControlsTap = true;\n\n            // Some versions of Android don't prevent ghost click event\n            // when preventDefault() was called on touchstart and/or touchend.\n            //\n            // This happens on v4.3, 4.2, 4.1,\n            // older versions strangely work correctly,\n            // but just in case we add delay on all of them)\n            var tapDelay = framework.features.isOldAndroid ? 600 : 30;\n            _blockControlsTapTimeout = setTimeout(function() {\n              _blockControlsTap = false;\n            }, tapDelay);\n          }\n\n        },\n        _fitControlsInViewport = function() {\n          return !pswp.likelyTouchDevice || _options.mouseUsed || screen.width > _options.fitControlsWidth;\n        },\n        _togglePswpClass = function(el, cName, add) {\n          framework[ (add ? 'add' : 'remove') + 'Class' ](el, 'pswp__' + cName);\n        },\n\n        // add class when there is just one item in the gallery\n        // (by default it hides left/right arrows and 1ofX counter)\n        _countNumItems = function() {\n          var hasOneSlide = (_options.getNumItemsFn() === 1);\n\n          if(hasOneSlide !== _galleryHasOneSlide) {\n            _togglePswpClass(_controls, 'ui--one-slide', hasOneSlide);\n            _galleryHasOneSlide = hasOneSlide;\n          }\n        },\n        _toggleShareModalClass = function() {\n          _togglePswpClass(_shareModal, 'share-modal--hidden', _shareModalHidden);\n        },\n        _toggleShareModal = function() {\n\n          _shareModalHidden = !_shareModalHidden;\n\n\n          if(!_shareModalHidden) {\n            _toggleShareModalClass();\n            setTimeout(function() {\n              if(!_shareModalHidden) {\n                framework.addClass(_shareModal, 'pswp__share-modal--fade-in');\n              }\n            }, 30);\n          } else {\n            framework.removeClass(_shareModal, 'pswp__share-modal--fade-in');\n            setTimeout(function() {\n              if(_shareModalHidden) {\n                _toggleShareModalClass();\n              }\n            }, 300);\n          }\n\n          if(!_shareModalHidden) {\n            _updateShareURLs();\n          }\n          return false;\n        },\n\n        _openWindowPopup = function(e) {\n          e = e || window.event;\n          var target = e.target || e.srcElement;\n\n          pswp.shout('shareLinkClick', e, target);\n\n          if(!target.href) {\n            return false;\n          }\n\n          if( target.hasAttribute('download') ) {\n            return true;\n          }\n\n          window.open(target.href, 'pswp_share', 'scrollbars=yes,resizable=yes,toolbar=no,'+\n            'location=yes,width=550,height=420,top=100,left=' +\n            (window.screen ? Math.round(screen.width / 2 - 275) : 100)  );\n\n          if(!_shareModalHidden) {\n            _toggleShareModal();\n          }\n\n          return false;\n        },\n        _updateShareURLs = function() {\n          var shareButtonOut = '',\n            shareButtonData,\n            shareURL,\n            image_url,\n            page_url,\n            share_text;\n\n          for(var i = 0; i < _options.shareButtons.length; i++) {\n            shareButtonData = _options.shareButtons[i];\n\n            image_url = _options.getImageURLForShare(shareButtonData);\n            page_url = _options.getPageURLForShare(shareButtonData);\n            share_text = _options.getTextForShare(shareButtonData);\n\n            shareURL = shareButtonData.url.replace('{{url}}', encodeURIComponent(page_url) )\n              .replace('{{image_url}}', encodeURIComponent(image_url) )\n              .replace('{{raw_image_url}}', image_url )\n              .replace('{{text}}', encodeURIComponent(share_text) );\n\n            shareButtonOut += '<a href=\"' + shareURL + '\" target=\"_blank\" '+\n              'class=\"pswp__share--' + shareButtonData.id + '\"' +\n              (shareButtonData.download ? 'download' : '') + '>' +\n              shareButtonData.label + '</a>';\n\n            if(_options.parseShareButtonOut) {\n              shareButtonOut = _options.parseShareButtonOut(shareButtonData, shareButtonOut);\n            }\n          }\n          _shareModal.children[0].innerHTML = shareButtonOut;\n          _shareModal.children[0].onclick = _openWindowPopup;\n\n        },\n        _hasCloseClass = function(target) {\n          for(var  i = 0; i < _options.closeElClasses.length; i++) {\n            if( framework.hasClass(target, 'pswp__' + _options.closeElClasses[i]) ) {\n              return true;\n            }\n          }\n        },\n        _idleInterval,\n        _idleTimer,\n        _idleIncrement = 0,\n        _onIdleMouseMove = function() {\n          clearTimeout(_idleTimer);\n          _idleIncrement = 0;\n          if(_isIdle) {\n            ui.setIdle(false);\n          }\n        },\n        _onMouseLeaveWindow = function(e) {\n          e = e ? e : window.event;\n          var from = e.relatedTarget || e.toElement;\n          if (!from || from.nodeName === 'HTML') {\n            clearTimeout(_idleTimer);\n            _idleTimer = setTimeout(function() {\n              ui.setIdle(true);\n            }, _options.timeToIdleOutside);\n          }\n        },\n        _setupFullscreenAPI = function() {\n          if(_options.fullscreenEl && !framework.features.isOldAndroid) {\n            if(!_fullscrenAPI) {\n              _fullscrenAPI = ui.getFullscreenAPI();\n            }\n            if(_fullscrenAPI) {\n              framework.bind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n              ui.updateFullscreen();\n              framework.addClass(pswp.template, 'pswp--supports-fs');\n            } else {\n              framework.removeClass(pswp.template, 'pswp--supports-fs');\n            }\n          }\n        },\n        _setupLoadingIndicator = function() {\n          // Setup loading indicator\n          if(_options.preloaderEl) {\n\n            _toggleLoadingIndicator(true);\n\n            _listen('beforeChange', function() {\n\n              clearTimeout(_loadingIndicatorTimeout);\n\n              // display loading indicator with delay\n              _loadingIndicatorTimeout = setTimeout(function() {\n\n                if(pswp.currItem && pswp.currItem.loading) {\n\n                  if( !pswp.allowProgressiveImg() || (pswp.currItem.img && !pswp.currItem.img.naturalWidth)  ) {\n                    // show preloader if progressive loading is not enabled,\n                    // or image width is not defined yet (because of slow connection)\n                    _toggleLoadingIndicator(false);\n                    // items-controller.js function allowProgressiveImg\n                  }\n\n                } else {\n                  _toggleLoadingIndicator(true); // hide preloader\n                }\n\n              }, _options.loadingIndicatorDelay);\n\n            });\n            _listen('imageLoadComplete', function(index, item) {\n              if(pswp.currItem === item) {\n                _toggleLoadingIndicator(true);\n              }\n            });\n\n          }\n        },\n        _toggleLoadingIndicator = function(hide) {\n          if( _loadingIndicatorHidden !== hide ) {\n            _togglePswpClass(_loadingIndicator, 'preloader--active', !hide);\n            _loadingIndicatorHidden = hide;\n          }\n        },\n        _applyNavBarGaps = function(item) {\n          var gap = item.vGap;\n\n          if( _fitControlsInViewport() ) {\n\n            var bars = _options.barsSize;\n            if(_options.captionEl && bars.bottom === 'auto') {\n              if(!_fakeCaptionContainer) {\n                _fakeCaptionContainer = framework.createEl('pswp__caption pswp__caption--fake');\n                _fakeCaptionContainer.appendChild( framework.createEl('pswp__caption__center') );\n                _controls.insertBefore(_fakeCaptionContainer, _captionContainer);\n                framework.addClass(_controls, 'pswp__ui--fit');\n              }\n              if( _options.addCaptionHTMLFn(item, _fakeCaptionContainer, true) ) {\n\n                var captionSize = _fakeCaptionContainer.clientHeight;\n                gap.bottom = parseInt(captionSize,10) || 44;\n              } else {\n                gap.bottom = bars.top; // if no caption, set size of bottom gap to size of top\n              }\n            } else {\n              gap.bottom = bars.bottom === 'auto' ? 0 : bars.bottom;\n            }\n\n            // height of top bar is static, no need to calculate it\n            gap.top = bars.top;\n          } else {\n            gap.top = gap.bottom = 0;\n          }\n        },\n        _setupIdle = function() {\n          // Hide controls when mouse is used\n          if(_options.timeToIdle) {\n            _listen('mouseUsed', function() {\n\n              framework.bind(document, 'mousemove', _onIdleMouseMove);\n              framework.bind(document, 'mouseout', _onMouseLeaveWindow);\n\n              _idleInterval = setInterval(function() {\n                _idleIncrement++;\n                if(_idleIncrement === 2) {\n                  ui.setIdle(true);\n                }\n              }, _options.timeToIdle / 2);\n            });\n          }\n        },\n        _setupHidingControlsDuringGestures = function() {\n\n          // Hide controls on vertical drag\n          _listen('onVerticalDrag', function(now) {\n            if(_controlsVisible && now < 0.95) {\n              ui.hideControls();\n            } else if(!_controlsVisible && now >= 0.95) {\n              ui.showControls();\n            }\n          });\n\n          // Hide controls when pinching to close\n          var pinchControlsHidden;\n          _listen('onPinchClose' , function(now) {\n            if(_controlsVisible && now < 0.9) {\n              ui.hideControls();\n              pinchControlsHidden = true;\n            } else if(pinchControlsHidden && !_controlsVisible && now > 0.9) {\n              ui.showControls();\n            }\n          });\n\n          _listen('zoomGestureEnded', function() {\n            pinchControlsHidden = false;\n            if(pinchControlsHidden && !_controlsVisible) {\n              ui.showControls();\n            }\n          });\n\n        };\n\n\n\n      var _uiElements = [\n        {\n          name: 'caption',\n          option: 'captionEl',\n          onInit: function(el) {\n            _captionContainer = el;\n          }\n        },\n        {\n          name: 'share-modal',\n          option: 'shareEl',\n          onInit: function(el) {\n            _shareModal = el;\n          },\n          onTap: function() {\n            _toggleShareModal();\n          }\n        },\n        {\n          name: 'button--share',\n          option: 'shareEl',\n          onInit: function(el) {\n            _shareButton = el;\n          },\n          onTap: function() {\n            _toggleShareModal();\n          }\n        },\n        {\n          name: 'button--zoom',\n          option: 'zoomEl',\n          onTap: pswp.toggleDesktopZoom\n        },\n        {\n          name: 'counter',\n          option: 'counterEl',\n          onInit: function(el) {\n            _indexIndicator = el;\n          }\n        },\n        {\n          name: 'button--close',\n          option: 'closeEl',\n          onTap: pswp.close\n        },\n        {\n          name: 'button--arrow--left',\n          option: 'arrowEl',\n          onTap: pswp.prev\n        },\n        {\n          name: 'button--arrow--right',\n          option: 'arrowEl',\n          onTap: pswp.next\n        },\n        {\n          name: 'button--fs',\n          option: 'fullscreenEl',\n          onTap: function() {\n            if(_fullscrenAPI.isFullscreen()) {\n              _fullscrenAPI.exit();\n            } else {\n              _fullscrenAPI.enter();\n            }\n          }\n        },\n        {\n          name: 'preloader',\n          option: 'preloaderEl',\n          onInit: function(el) {\n            _loadingIndicator = el;\n          }\n        }\n\n      ];\n\n      var _setupUIElements = function() {\n        var item,\n          classAttr,\n          uiElement;\n\n        var loopThroughChildElements = function(sChildren) {\n          if(!sChildren) {\n            return;\n          }\n\n          var l = sChildren.length;\n          for(var i = 0; i < l; i++) {\n            item = sChildren[i];\n            classAttr = item.className;\n\n            for(var a = 0; a < _uiElements.length; a++) {\n              uiElement = _uiElements[a];\n\n              if(classAttr.indexOf('pswp__' + uiElement.name) > -1  ) {\n\n                if( _options[uiElement.option] ) { // if element is not disabled from options\n\n                  framework.removeClass(item, 'pswp__element--disabled');\n                  if(uiElement.onInit) {\n                    uiElement.onInit(item);\n                  }\n\n                  //item.style.display = 'block';\n                } else {\n                  framework.addClass(item, 'pswp__element--disabled');\n                  //item.style.display = 'none';\n                }\n              }\n            }\n          }\n        };\n        loopThroughChildElements(_controls.children);\n\n        var topBar =  framework.getChildByClass(_controls, 'pswp__top-bar');\n        if(topBar) {\n          loopThroughChildElements( topBar.children );\n        }\n      };\n\n\n\n\n      ui.init = function() {\n\n        // extend options\n        framework.extend(pswp.options, _defaultUIOptions, true);\n\n        // create local link for fast access\n        _options = pswp.options;\n\n        // find pswp__ui element\n        _controls = framework.getChildByClass(pswp.scrollWrap, 'pswp__ui');\n\n        // create local link\n        _listen = pswp.listen;\n\n\n        _setupHidingControlsDuringGestures();\n\n        // update controls when slides change\n        _listen('beforeChange', ui.update);\n\n        // toggle zoom on double-tap\n        _listen('doubleTap', function(point) {\n          var initialZoomLevel = pswp.currItem.initialZoomLevel;\n          if(pswp.getZoomLevel() !== initialZoomLevel) {\n            pswp.zoomTo(initialZoomLevel, point, 333);\n          } else {\n            pswp.zoomTo(_options.getDoubleTapZoom(false, pswp.currItem), point, 333);\n          }\n        });\n\n        // Allow text selection in caption\n        _listen('preventDragEvent', function(e, isDown, preventObj) {\n          var t = e.target || e.srcElement;\n          if(\n            t &&\n            t.getAttribute('class') && e.type.indexOf('mouse') > -1 &&\n            ( t.getAttribute('class').indexOf('__caption') > 0 || (/(SMALL|STRONG|EM)/i).test(t.tagName) )\n          ) {\n            preventObj.prevent = false;\n          }\n        });\n\n        // bind events for UI\n        _listen('bindEvents', function() {\n          framework.bind(_controls, 'pswpTap click', _onControlsTap);\n          framework.bind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n\n          if(!pswp.likelyTouchDevice) {\n            framework.bind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n          }\n        });\n\n        // unbind events for UI\n        _listen('unbindEvents', function() {\n          if(!_shareModalHidden) {\n            _toggleShareModal();\n          }\n\n          if(_idleInterval) {\n            clearInterval(_idleInterval);\n          }\n          framework.unbind(document, 'mouseout', _onMouseLeaveWindow);\n          framework.unbind(document, 'mousemove', _onIdleMouseMove);\n          framework.unbind(_controls, 'pswpTap click', _onControlsTap);\n          framework.unbind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n          framework.unbind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n\n          if(_fullscrenAPI) {\n            framework.unbind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n            if(_fullscrenAPI.isFullscreen()) {\n              _options.hideAnimationDuration = 0;\n              _fullscrenAPI.exit();\n            }\n            _fullscrenAPI = null;\n          }\n        });\n\n\n        // clean up things when gallery is destroyed\n        _listen('destroy', function() {\n          if(_options.captionEl) {\n            if(_fakeCaptionContainer) {\n              _controls.removeChild(_fakeCaptionContainer);\n            }\n            framework.removeClass(_captionContainer, 'pswp__caption--empty');\n          }\n\n          if(_shareModal) {\n            _shareModal.children[0].onclick = null;\n          }\n          framework.removeClass(_controls, 'pswp__ui--over-close');\n          framework.addClass( _controls, 'pswp__ui--hidden');\n          ui.setIdle(false);\n        });\n\n\n        if(!_options.showAnimationDuration) {\n          framework.removeClass( _controls, 'pswp__ui--hidden');\n        }\n        _listen('initialZoomIn', function() {\n          if(_options.showAnimationDuration) {\n            framework.removeClass( _controls, 'pswp__ui--hidden');\n          }\n        });\n        _listen('initialZoomOut', function() {\n          framework.addClass( _controls, 'pswp__ui--hidden');\n        });\n\n        _listen('parseVerticalMargin', _applyNavBarGaps);\n\n        _setupUIElements();\n\n        if(_options.shareEl && _shareButton && _shareModal) {\n          _shareModalHidden = true;\n        }\n\n        _countNumItems();\n\n        _setupIdle();\n\n        _setupFullscreenAPI();\n\n        _setupLoadingIndicator();\n      };\n\n      ui.setIdle = function(isIdle) {\n        _isIdle = isIdle;\n        _togglePswpClass(_controls, 'ui--idle', isIdle);\n      };\n\n      ui.update = function() {\n        // Don't update UI if it's hidden\n        if(_controlsVisible && pswp.currItem) {\n\n          ui.updateIndexIndicator();\n\n          if(_options.captionEl) {\n            _options.addCaptionHTMLFn(pswp.currItem, _captionContainer);\n\n            _togglePswpClass(_captionContainer, 'caption--empty', !pswp.currItem.title);\n          }\n\n          _overlayUIUpdated = true;\n\n        } else {\n          _overlayUIUpdated = false;\n        }\n\n        if(!_shareModalHidden) {\n          _toggleShareModal();\n        }\n\n        _countNumItems();\n      };\n\n      ui.updateFullscreen = function(e) {\n\n        if(e) {\n          // some browsers change window scroll position during the fullscreen\n          // so PhotoSwipe updates it just in case\n          setTimeout(function() {\n            pswp.setScrollOffset( 0, framework.getScrollY() );\n          }, 50);\n        }\n\n        // toogle pswp--fs class on root element\n        framework[ (_fullscrenAPI.isFullscreen() ? 'add' : 'remove') + 'Class' ](pswp.template, 'pswp--fs');\n      };\n\n      ui.updateIndexIndicator = function() {\n        if(_options.counterEl) {\n          _indexIndicator.innerHTML = (pswp.getCurrentIndex()+1) +\n            _options.indexIndicatorSep +\n            _options.getNumItemsFn();\n        }\n      };\n\n      ui.onGlobalTap = function(e) {\n        e = e || window.event;\n        var target = e.target || e.srcElement;\n\n        if(_blockControlsTap) {\n          return;\n        }\n\n        if(e.detail && e.detail.pointerType === 'mouse') {\n\n          // close gallery if clicked outside of the image\n          if(_hasCloseClass(target)) {\n            pswp.close();\n            return;\n          }\n\n          if(framework.hasClass(target, 'pswp__img')) {\n            if(pswp.getZoomLevel() === 1 && pswp.getZoomLevel() <= pswp.currItem.fitRatio) {\n              if(_options.clickToCloseNonZoomable) {\n                pswp.close();\n              }\n            } else {\n              pswp.toggleDesktopZoom(e.detail.releasePoint);\n            }\n          }\n\n        } else {\n\n          // tap anywhere (except buttons) to toggle visibility of controls\n          if(_options.tapToToggleControls) {\n            if(_controlsVisible) {\n              ui.hideControls();\n            } else {\n              ui.showControls();\n            }\n          }\n\n          // tap to close gallery\n          if(_options.tapToClose && (framework.hasClass(target, 'pswp__img') || _hasCloseClass(target)) ) {\n            pswp.close();\n            return;\n          }\n\n        }\n      };\n      ui.onMouseOver = function(e) {\n        e = e || window.event;\n        var target = e.target || e.srcElement;\n\n        // add class when mouse is over an element that should close the gallery\n        _togglePswpClass(_controls, 'ui--over-close', _hasCloseClass(target));\n      };\n\n      ui.hideControls = function() {\n        framework.addClass(_controls,'pswp__ui--hidden');\n        _controlsVisible = false;\n      };\n\n      ui.showControls = function() {\n        _controlsVisible = true;\n        if(!_overlayUIUpdated) {\n          ui.update();\n        }\n        framework.removeClass(_controls,'pswp__ui--hidden');\n      };\n\n      ui.supportsFullscreen = function() {\n        var d = document;\n        return !!(d.exitFullscreen || d.mozCancelFullScreen || d.webkitExitFullscreen || d.msExitFullscreen);\n      };\n\n      ui.getFullscreenAPI = function() {\n        var dE = document.documentElement,\n          api,\n          tF = 'fullscreenchange';\n\n        if (dE.requestFullscreen) {\n          api = {\n            enterK: 'requestFullscreen',\n            exitK: 'exitFullscreen',\n            elementK: 'fullscreenElement',\n            eventK: tF\n          };\n\n        } else if(dE.mozRequestFullScreen ) {\n          api = {\n            enterK: 'mozRequestFullScreen',\n            exitK: 'mozCancelFullScreen',\n            elementK: 'mozFullScreenElement',\n            eventK: 'moz' + tF\n          };\n\n\n\n        } else if(dE.webkitRequestFullscreen) {\n          api = {\n            enterK: 'webkitRequestFullscreen',\n            exitK: 'webkitExitFullscreen',\n            elementK: 'webkitFullscreenElement',\n            eventK: 'webkit' + tF\n          };\n\n        } else if(dE.msRequestFullscreen) {\n          api = {\n            enterK: 'msRequestFullscreen',\n            exitK: 'msExitFullscreen',\n            elementK: 'msFullscreenElement',\n            eventK: 'MSFullscreenChange'\n          };\n        }\n\n        if(api) {\n          api.enter = function() {\n            // disable close-on-scroll in fullscreen\n            _initalCloseOnScrollValue = _options.closeOnScroll;\n            _options.closeOnScroll = false;\n\n            if(this.enterK === 'webkitRequestFullscreen') {\n              pswp.template[this.enterK]( Element.ALLOW_KEYBOARD_INPUT );\n            } else {\n              return pswp.template[this.enterK]();\n            }\n          };\n          api.exit = function() {\n            _options.closeOnScroll = _initalCloseOnScrollValue;\n\n            return document[this.exitK]();\n\n          };\n          api.isFullscreen = function() { return document[this.elementK]; };\n        }\n\n        return api;\n      };\n\n\n\n    };\n  return PhotoSwipeUI_Default;\n\n\n});\n\n\n\n\nvar initPhotoSwipeFromDOM = function(gallerySelector) {\n  var parseThumbnailElements = function(el) {\n    var thumbElements = el.childNodes,\n      numNodes = thumbElements.length,\n      items = [],\n      figureEl,\n      linkEl,\n      size,\n      item;\n\n    for(var i = 0,j=0; i < numNodes; i++) {\n\n      figureEl = thumbElements[i]; // <figure> element\n\n      // include only element nodes\n      if(figureEl.tagName !== 'FIGURE') {\n        continue;\n      }\n\n      linkEl = figureEl.children[0]; // <a> element\n      if(!linkEl)continue;\n      size = linkEl.getAttribute('data-size').split('x');\n      // create slide object\n      item = {\n        src: linkEl.getAttribute('href'),\n        w: parseInt(size[0], 10),\n        h: parseInt(size[1], 10)\n      };\n\n      // create slide object\n      if(linkEl.children.length > 0) {\n        item.msrc = linkEl.children[0].getAttribute('src');\n      }\n      item.el = figureEl; // save link to element for getThumbBoundsFn\n      items.push(item);\n    }\n\n    return items;\n  };\n  var closest = function closest(el, fn) {\n    return el && ( fn(el) ? el : closest(el.parentNode, fn) );\n  };\n  var onThumbnailsClick = function(e) {\n    e = e || window.event;\n    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n    var eTarget = e.target || e.srcElement;\n    // find root element of slide\n    var clickedListItem = closest(eTarget, function(el) {\n      return (el.tagName && el.tagName.toUpperCase() === 'FIGURE');\n    });\n    if(!clickedListItem) {\n      return;\n    }\n    var clickedGallery = clickedListItem.parentNode,\n      childNodes = clickedListItem.parentNode.childNodes,\n      numChildNodes = childNodes.length,\n      nodeIndex = 0,\n      index;\n    for (var i = 0; i < numChildNodes; i++) {\n      if(childNodes[i].tagName !== 'FIGURE') {\n        continue;\n      }\n\n      if(childNodes[i] === clickedListItem) {\n        index = nodeIndex;\n        break;\n      }\n      nodeIndex++;\n    }\n\n\n\n    if(index >= 0) {\n      // open PhotoSwipe if valid index found\n      openPhotoSwipe( index, clickedGallery );\n    }\n    return false;\n  };\n  var photoswipeParseHash = function() {\n    var hash = window.location.hash.substring(1),\n      params = {};\n\n    if(hash.length < 5) {\n      return params;\n    }\n\n    var vars = hash.split('&');\n    for (var i = 0; i < vars.length; i++) {\n      if(!vars[i]) {\n        continue;\n      }\n      var pair = vars[i].split('=');\n      if(pair.length < 2) {\n        continue;\n      }\n      params[pair[0]] = pair[1];\n    }\n\n    if(params.gid) {\n      params.gid = parseInt(params.gid, 10);\n    }\n\n    return params;\n  };\n  var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {\n    var pswpElement = document.querySelectorAll('.pswp')[0],\n      gallery,\n      options,\n      items;\n\n    items = parseThumbnailElements(galleryElement);\n    options = {\n      galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n      getThumbBoundsFn: function(index) {\n        var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail\n          pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n          rect = thumbnail.getBoundingClientRect();\n        return {x:rect.left, y:rect.top + pageYScroll, w:rect.width};\n      }\n    };\n    if(fromURL) {\n      if(options.galleryPIDs) {\n        for(var j = 0; j < items.length; j++) {\n          if(items[j].pid == index) {\n            options.index = j;\n            break;\n          }\n        }\n      } else {\n        options.index = parseInt(index, 10) - 1;\n      }\n    } else {\n      options.index = parseInt(index, 10);\n    }\n    if( isNaN(options.index) ) {\n      return;\n    }\n    if(disableAnimation) {\n      options.showAnimationDuration = 0;\n    }\n    gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);\n    gallery.init();\n  };\n  var galleryElements = document.querySelectorAll( gallerySelector );\n  for(var i = 0, l = galleryElements.length; i < l; i++) {\n    galleryElements[i].setAttribute('data-pswp-uid', i+1);\n    galleryElements[i].onclick = onThumbnailsClick;\n  }\n  var hashData = photoswipeParseHash();\n  if(hashData.pid && hashData.gid) {\n    openPhotoSwipe( hashData.pid ,  galleryElements[ hashData.gid - 1 ], true, true );\n  }\n};\ninitPhotoSwipeFromDOM('.my-gallery');\n\n\nvar carousel = function () {\n  var lootTime=3000;\n  var loopTimer=-1,length,index=0;\n  var c = document.querySelector('.carousel');\n  var active = function (i) {\n    clearInterval(loopTimer);\n    index=(index+length)%length;\n    img[index].style.opacity=0;\n    index=(index+i+length)%length;\n    ia.style.left = ixs[index].offsetLeft+'px';\n    loop(lootTime);\n    img[index].style.opacity=1;\n  };\n  var loop = function (s) {\n    loopTimer = setTimeout(function () {\n      active(1);\n    },s);\n  };\n  if(c){\n    c.querySelector('.left').onclick=function () {\n      active(-1);\n    };\n    c.querySelector('.right').onclick=function () {\n      active(1);\n    };\n    var img = c.querySelectorAll('.box>div');\n    var idx = c.querySelector('.index');\n    var ixs=[];\n    length=img.length;\n    if(length){\n      var ia = idx.appendChild(document.createElement('div'));\n      ia.className='act';\n    };\n    for(var i=0;i<length;i++){\n      var ix=idx.appendChild(document.createElement('span'));\n      ixs.push(ix);\n      ix.i=i;\n      ix.onclick=function () {\n        index=this.i-1;\n        active(1);\n      };\n    }\n    active(0);\n  }\n};\ncarousel();\n"]}